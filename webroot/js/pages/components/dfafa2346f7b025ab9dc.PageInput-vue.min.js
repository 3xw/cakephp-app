(self["webpackChunkcake_webpack"] = self["webpackChunkcake_webpack"] || []).push([[305],{

/***/ 605:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "default": () => (/* binding */ PageInput)
});

;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./vendor/3xw/cakephp-pages/resources/assets/components/PageInput.vue?vue&type=template&id=6a6992d6&scoped=true&
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { attrs: { id: "page-input" } }, [
    _c("label", { attrs: { for: _vm.name } }, [
      _vm._v(_vm._s(_vm.name) + " " + _vm._s(_vm.language))
    ]),
    _vm._v(" "),
    _vm.type == "text"
      ? _c("input", {
          directives: [
            {
              name: "model",
              rawName: "v-model",
              value: _vm.model._translations[_vm.language]
                ? _vm.model._translations[_vm.language][_vm.name]
                : _vm.model[_vm.name],
              expression:
                "model._translations[language]? model._translations[language][name]: model[name]"
            }
          ],
          staticClass: "form-control",
          attrs: {
            id: "a-" + _vm.language + "-header",
            type: "text",
            name: _vm.model._translations[_vm.language]
              ? "_translations[" + _vm.language + "][" + _vm.name + "]"
              : _vm.name
          },
          domProps: {
            value: _vm.model._translations[_vm.language]
              ? _vm.model._translations[_vm.language][_vm.name]
              : _vm.model[_vm.name]
          },
          on: {
            input: function($event) {
              if ($event.target.composing) {
                return
              }
              _vm.$set(
                _vm.model._translations[_vm.language]
                  ? _vm.model._translations[_vm.language][_vm.name]
                  : _vm.model,
                _vm.name,
                $event.target.value
              )
            }
          }
        })
      : _vm._e(),
    _vm._v(" "),
    _vm.type == "textarea"
      ? _c("textarea", {
          directives: [
            {
              name: "model",
              rawName: "v-model",
              value: _vm.model._translations[_vm.language]
                ? _vm.model._translations[_vm.language][_vm.name]
                : _vm.model[_vm.name],
              expression:
                "model._translations[language]? model._translations[language][name]: model[name]"
            }
          ],
          staticClass: "form-control",
          attrs: {
            id: "a-" + _vm.language + "-header",
            type: "text",
            name: _vm.model._translations[_vm.language]
              ? "_translations[" + _vm.language + "][" + _vm.name + "]"
              : _vm.name
          },
          domProps: {
            value: _vm.model._translations[_vm.language]
              ? _vm.model._translations[_vm.language][_vm.name]
              : _vm.model[_vm.name]
          },
          on: {
            input: function($event) {
              if ($event.target.composing) {
                return
              }
              _vm.$set(
                _vm.model._translations[_vm.language]
                  ? _vm.model._translations[_vm.language][_vm.name]
                  : _vm.model,
                _vm.name,
                $event.target.value
              )
            }
          }
        })
      : _vm._e()
  ])
}
var staticRenderFns = []
render._withStripped = true


;// CONCATENATED MODULE: ./vendor/3xw/cakephp-pages/resources/assets/components/PageInput.vue?vue&type=template&id=6a6992d6&scoped=true&

;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-1[0].rules[0].use!./node_modules/vue-loader/lib/index.js??vue-loader-options!./vendor/3xw/cakephp-pages/resources/assets/components/PageInput.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ const PageInputvue_type_script_lang_js_ = ({
  name: 'page-input',
  props: {
    name: String,
    type: String,
    model: Object,
    language: String
  }
});
;// CONCATENATED MODULE: ./vendor/3xw/cakephp-pages/resources/assets/components/PageInput.vue?vue&type=script&lang=js&
 /* harmony default export */ const components_PageInputvue_type_script_lang_js_ = (PageInputvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__(900);
;// CONCATENATED MODULE: ./vendor/3xw/cakephp-pages/resources/assets/components/PageInput.vue





/* normalize component */
;
var component = (0,componentNormalizer/* default */.Z)(
  components_PageInputvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  "6a6992d6",
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "vendor/3xw/cakephp-pages/resources/assets/components/PageInput.vue"
/* harmony default export */ const PageInput = (component.exports);

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,