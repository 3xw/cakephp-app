(self["webpackChunkcake_webpack"] = self["webpackChunkcake_webpack"] || []).push([[354],{

/***/ 768:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Lp": () => (/* binding */ client)
/* harmony export */ });
/* unused harmony exports parseResponse, parseResponseWithPaginate, parseTags */
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(600);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }


var Http = axios__WEBPACK_IMPORTED_MODULE_0___default().create({
  headers: {
    'X-CSRF-TOKEN': window.getCsrfToken(),
    'Accept': 'application/json',
    'Content-Type': 'application/json'
  }
});

var client = /*#__PURE__*/function (_Http) {
  _inherits(client, _Http);

  var _super = _createSuper(client);

  function client() {
    _classCallCheck(this, client);

    return _super.apply(this, arguments);
  }

  return client;
}(Http);

var parseResponse = function parseResponse(response) {
  return {
    data: response.data.data // expecting object with ID

  };
},
    parseResponseWithPaginate = function parseResponseWithPaginate(response) {
  var data = response.data;
  return Object.assign({}, response, {
    data: data.data,
    // expecting array of objects with IDs
    pagination: data.pagination // expecting object with ID

  });
},
    parseTags = function parseTags(response) {
  var atagTypes = {};

  for (var i in response.data.data) {
    var atag = response.data.data[i];
    var type = atag.atag_type ? atag.atag_type : {
      id: 0,
      name: 'Autres',
      exclusive: false,
      order: 1000
    };
    if (!atagTypes[type.name]) atagTypes[type.name] = Object.assign({
      atags: []
    }, type);
    atagTypes[type.name].atags.push(atag);
  } // sort


  var keysSorted = Object.keys(atagTypes).sort(function (a, b) {
    return atagTypes[a].order - atagTypes[b].order;
  });
  var types = [];

  for (var _i in keysSorted) {
    types.push(atagTypes[keysSorted[_i]]);
  } // return tags


  return {
    data: types
  };
};



/***/ }),

/***/ 924:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "default": () => (/* binding */ SectionModal)
});

;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./vendor/3xw/cakephp-pages/resources/assets/components/SectionModal.vue?vue&type=template&id=46a3e73d&
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _vm.show
    ? _c(
        "div",
        {
          staticClass: "modal-mask",
          attrs: { id: "pages-section-modal", transition: "modal" }
        },
        [
          _c("div", { staticClass: "modal-wrapper" }, [
            _c("div", { staticClass: "modal-container container" }, [
              _c("div", { staticClass: "custom-modal-header" }, [
                _vm._v("\n        Section selection\n      ")
              ]),
              _vm._v(" "),
              _c(
                "div",
                { staticClass: "custom-modal-body" },
                [
                  _vm._l(_vm.errors, function(error, index) {
                    return _c(
                      "div",
                      {
                        staticClass: "alert alert-warning alert-dismissible",
                        attrs: { "track-by": "$index", role: "alert" }
                      },
                      [
                        _c(
                          "button",
                          {
                            staticClass: "close",
                            attrs: { type: "button", "aria-label": "Close" },
                            on: {
                              click: function($event) {
                                _vm.errors = []
                              }
                            }
                          },
                          [
                            _c("span", { attrs: { "aria-hidden": "true" } }, [
                              _vm._v("Ã—")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("strong", [_vm._v("Watch out!")]),
                        _vm._v(" " + _vm._s(error) + "\n        ")
                      ]
                    )
                  }),
                  _vm._v(" "),
                  _vm.loading
                    ? _c(
                        "div",
                        { staticClass: "attachment-loading-container" },
                        [
                          _c("img", {
                            staticClass: "img-responsive",
                            attrs: { src: _vm.url + "img/admin/loading.gif" }
                          })
                        ]
                      )
                    : _vm._e(),
                  _vm._v(" "),
                  !_vm.loading
                    ? _c("div", { staticClass: "row" }, [
                        _c("div", { staticClass: "col-xs-12" }, [
                          _c(
                            "table",
                            {
                              staticClass:
                                "table table-bordered table-striped table-condensed table-hover"
                            },
                            [
                              _vm._m(0),
                              _vm._v(" "),
                              _vm._l(_vm.sectionTypes, function(
                                sectionType,
                                index
                              ) {
                                return _c(
                                  "tr",
                                  { attrs: { id: "section-type-" + index } },
                                  [
                                    _c("td", [
                                      _vm._v(
                                        "\n                  " +
                                          _vm._s(sectionType.name) +
                                          "\n                "
                                      )
                                    ]),
                                    _vm._v(" "),
                                    _c("td", [
                                      _c("div", { staticClass: "btn-group" }, [
                                        _c(
                                          "a",
                                          {
                                            staticClass:
                                              "btn btn-xs btn-fill btn-info",
                                            attrs: {
                                              href: "#",
                                              role: "button"
                                            },
                                            on: {
                                              click: function($event) {
                                                return _vm.addSection(
                                                  sectionType.id
                                                )
                                              }
                                            }
                                          },
                                          [
                                            _vm._v(
                                              "\n                      Select\n                    "
                                            )
                                          ]
                                        )
                                      ])
                                    ])
                                  ]
                                )
                              }),
                              _vm._v(" "),
                              _c("tr", [
                                _c("td", [
                                  _c("div", { staticClass: "input-group" }, [
                                    _c(
                                      "span",
                                      { staticClass: "input-group-addon" },
                                      [_vm._v("Section type name Â Â ")]
                                    ),
                                    _vm._v(" "),
                                    _c("input", {
                                      directives: [
                                        {
                                          name: "model",
                                          rawName: "v-model",
                                          value: _vm.name,
                                          expression: "name"
                                        }
                                      ],
                                      staticClass: "form-control",
                                      attrs: { type: "text", placeholder: "" },
                                      domProps: { value: _vm.name },
                                      on: {
                                        input: function($event) {
                                          if ($event.target.composing) {
                                            return
                                          }
                                          _vm.name = $event.target.value
                                        }
                                      }
                                    })
                                  ])
                                ]),
                                _vm._v(" "),
                                _c("td", [
                                  _c("div", { staticClass: "btn-group" }, [
                                    _c(
                                      "a",
                                      {
                                        staticClass:
                                          "btn btn-xs btn-fill btn-success",
                                        attrs: { href: "#", role: "button" },
                                        on: {
                                          click: function($event) {
                                            return _vm.createSectionType()
                                          }
                                        }
                                      },
                                      [
                                        _vm._v(
                                          "\n                      Or create\n                    "
                                        )
                                      ]
                                    )
                                  ])
                                ])
                              ])
                            ],
                            2
                          )
                        ])
                      ])
                    : _vm._e(),
                  _vm._v(" "),
                  _c("p"),
                  _vm._v(" "),
                  _c("div", { staticClass: "custom-modal-footer" }, [
                    _c("div", { staticClass: "btn-group" }, [
                      _c(
                        "button",
                        {
                          staticClass:
                            "modal-default-button btn btn-fill btn-warning",
                          attrs: { type: "button" },
                          on: {
                            click: function($event) {
                              return _vm.close()
                            }
                          }
                        },
                        [_vm._v("\n              Close\n            ")]
                      )
                    ])
                  ])
                ],
                2
              )
            ])
          ])
        ]
      )
    : _vm._e()
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("tr", [
      _c("th", [_vm._v("Name")]),
      _vm._v(" "),
      _c("th", [_vm._v("Actions")])
    ])
  }
]
render._withStripped = true


;// CONCATENATED MODULE: ./vendor/3xw/cakephp-pages/resources/assets/components/SectionModal.vue?vue&type=template&id=46a3e73d&

// EXTERNAL MODULE: ./vendor/3xw/cakephp-pages/resources/assets/http/client.js
var client = __webpack_require__(768);
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-1[0].rules[0].use!./node_modules/vue-loader/lib/index.js??vue-loader-options!./vendor/3xw/cakephp-pages/resources/assets/components/SectionModal.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ const SectionModalvue_type_script_lang_js_ = ({
  name: 'pages-section-modal',
  data: function data() {
    return {
      name: '',
      loading: true,
      show: false,
      errors: [],
      sectionTypes: [],
      pagination: {
        "page_count": 1,
        "current_page": 1,
        "has_next_page": false,
        "has_prev_page": false,
        "count": 0,
        "limit": 100
      }
    };
  },
  props: {
    url: String,
    page: Object
  },
  created: function created() {
    if (window.mainEventHub['page'] == undefined) window.mainEventHub['page'] = new Vue();
    window.mainEventHub['page'].$on('open-section-modal', this.open);
  },
  mounted: function mounted() {//get section types here or not
  },
  methods: {
    close: function close() {
      this.show = false;
      this.loading = false;
      window.mainEventHub['page'].$emit('page-section-modal-closed');
    },
    open: function open() {
      this.loading = true;
      this.show = true;
      this.getSectionTypes();
    },
    getSectionTypes: function getSectionTypes() {
      this.name = '';
      this.loading = true;
      var params = {
        page: this.pagination.current_page
      };
      client/* client.get */.Lp.get(this.url + 'admin/pages/SectionTypes.json', {
        params: params
      }).then(this.getSectionTypesSuccessCallback, this.errorCallback);
    },
    addSection: function addSection(id) {
      this.loading = true;
      var data = new FormData();
      data.append('page_id', this.page.id);
      data.append('section_type_id', id);
      data.append('_csrfToken', window.getCsrfToken());
      client/* client.post */.Lp.post(this.url + 'admin/pages/Sections/add.json', data).then(this.createSectionTypeSuccessCallback, this.errorCallback);
    },
    createSectionType: function createSectionType() {
      this.loading = true;
      var data = new FormData();
      data.append('name', this.name);
      data.append('_csrfToken', window.getCsrfToken());
      client/* client.post */.Lp.post(this.url + 'admin/pages/SectionTypes/add.json', data).then(this.getSectionTypes, this.errorCallback);
    },
    createSectionTypeSuccessCallback: function createSectionTypeSuccessCallback(response) {
      this.loading = true;
      console.log(response);
      client/* client.get */.Lp.get(this.url + 'admin/pages/Sections/view/' + response.data.data.id + '.json').then(this.getSectionSuccessCallback, this.errorCallback);
    },
    getSectionSuccessCallback: function getSectionSuccessCallback(response) {
      this.loading = false;
      var section = response.data.data;
      this.page.sections.push(section);
      this.close();
    },
    getSectionTypesSuccessCallback: function getSectionTypesSuccessCallback(response) {
      this.loading = false;
      this.sectionTypes = response.data.data;
      this.pagination = response.data.pagination;
    },
    errorCallback: function errorCallback(response) {
      this.loading = false;
      var message = response.data ? response.data.data.message : 'Your session is lost, please login again!';
      this.errors.push(message);
    }
  }
});
;// CONCATENATED MODULE: ./vendor/3xw/cakephp-pages/resources/assets/components/SectionModal.vue?vue&type=script&lang=js&
 /* harmony default export */ const components_SectionModalvue_type_script_lang_js_ = (SectionModalvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__(900);
;// CONCATENATED MODULE: ./vendor/3xw/cakephp-pages/resources/assets/components/SectionModal.vue





/* normalize component */
;
var component = (0,componentNormalizer/* default */.Z)(
  components_SectionModalvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "vendor/3xw/cakephp-pages/resources/assets/components/SectionModal.vue"
/* harmony default export */ const SectionModal = (component.exports);

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYWtlLXdlYnBhY2svLi92ZW5kb3IvM3h3L2Nha2VwaHAtcGFnZXMvcmVzb3VyY2VzL2Fzc2V0cy9odHRwL2NsaWVudC5qcyIsIndlYnBhY2s6Ly9jYWtlLXdlYnBhY2svLi92ZW5kb3IvM3h3L2Nha2VwaHAtcGFnZXMvcmVzb3VyY2VzL2Fzc2V0cy9jb21wb25lbnRzL1NlY3Rpb25Nb2RhbC52dWU/MmQ1YiIsIndlYnBhY2s6Ly9jYWtlLXdlYnBhY2svdmVuZG9yLzN4dy9jYWtlcGhwLXBhZ2VzL3Jlc291cmNlcy9hc3NldHMvY29tcG9uZW50cy9TZWN0aW9uTW9kYWwudnVlIiwid2VicGFjazovL2Nha2Utd2VicGFjay8uL3ZlbmRvci8zeHcvY2FrZXBocC1wYWdlcy9yZXNvdXJjZXMvYXNzZXRzL2NvbXBvbmVudHMvU2VjdGlvbk1vZGFsLnZ1ZT80NTkwIiwid2VicGFjazovL2Nha2Utd2VicGFjay8uL3ZlbmRvci8zeHcvY2FrZXBocC1wYWdlcy9yZXNvdXJjZXMvYXNzZXRzL2NvbXBvbmVudHMvU2VjdGlvbk1vZGFsLnZ1ZSJdLCJuYW1lcyI6WyJIdHRwIiwiYXhpb3MiLCJoZWFkZXJzIiwid2luZG93IiwiZ2V0Q3NyZlRva2VuIiwiY2xpZW50IiwicGFyc2VSZXNwb25zZSIsInJlc3BvbnNlIiwiZGF0YSIsInBhcnNlUmVzcG9uc2VXaXRoUGFnaW5hdGUiLCJPYmplY3QiLCJhc3NpZ24iLCJwYWdpbmF0aW9uIiwicGFyc2VUYWdzIiwiYXRhZ1R5cGVzIiwiaSIsImF0YWciLCJ0eXBlIiwiYXRhZ190eXBlIiwiaWQiLCJuYW1lIiwiZXhjbHVzaXZlIiwib3JkZXIiLCJhdGFncyIsInB1c2giLCJrZXlzU29ydGVkIiwia2V5cyIsInNvcnQiLCJhIiwiYiIsInR5cGVzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUVBLElBQ0FBLElBQUksR0FBR0MsbURBQUEsQ0FBYTtBQUNsQkMsU0FB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QUFBLFNBQ0EsSUFEQSxDQUNBLG1DQURBLEVBQ0Esa0JBREE7QUFFQSxLQWxCQTtBQW1CQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLGtGQUNOLElBREEsQ0FDQSxxQ0FEQSxFQUNBLGtCQURBO0FBRUEsS0EzQkE7QUE0QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sc0ZBQ04sSUFEQSxDQUNBLG9CQURBLEVBQ0Esa0JBREE7QUFFQSxLQW5DQTtBQW9DQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLHlHQUNOLElBREEsQ0FDQSw4QkFEQSxFQUNBLGtCQURBO0FBRUEsS0F6Q0E7QUEwQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBL0NBO0FBZ0RBO0FBQ0E7QUFDQTtBQUNBO0FBRUEsS0FyREE7QUFzREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQTFEQTtBQTlCQSxDQURBLEU7O0FDdEZxTyxDQUFDLHNGQUFlLG9DQUFHLEVBQUMsQzs7OztBQ0E5SjtBQUMzQjtBQUNMOzs7QUFHM0Q7QUFDQSxDQUFzRztBQUN0RyxnQkFBZ0Isc0NBQVU7QUFDMUIsRUFBRSwrQ0FBTTtBQUNSLEVBQUUsTUFBTTtBQUNSLEVBQUUsZUFBZTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLElBQUksS0FBVSxFQUFFLFlBaUJmO0FBQ0Q7QUFDQSxtREFBZSxpQiIsImZpbGUiOiJqcy9wYWdlcy9jb21wb25lbnRzL2RmYWZhMjM0NmY3YjAyNWFiOWRjLlNlY3Rpb25Nb2RhbC12dWUubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJ1xuXG5jb25zdFxuSHR0cCA9IGF4aW9zLmNyZWF0ZSh7XG4gIGhlYWRlcnM6IHtcbiAgICAnWC1DU1JGLVRPS0VOJyAgICA6IHdpbmRvdy5nZXRDc3JmVG9rZW4oKSxcbiAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcbiAgfVxufSlcblxuY2xhc3MgY2xpZW50IGV4dGVuZHMgSHR0cCB7fVxuXG5jb25zdFxucGFyc2VSZXNwb25zZSA9IGZ1bmN0aW9uKHJlc3BvbnNlKVxue1xuICByZXR1cm4ge1xuICAgIGRhdGE6IHJlc3BvbnNlLmRhdGEuZGF0YS8vIGV4cGVjdGluZyBvYmplY3Qgd2l0aCBJRFxuICB9XG59LFxucGFyc2VSZXNwb25zZVdpdGhQYWdpbmF0ZSA9IGZ1bmN0aW9uKHJlc3BvbnNlKVxue1xuICBjb25zdCB7IGRhdGEgfSA9IHJlc3BvbnNlO1xuXG4gIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCByZXNwb25zZSwge1xuICAgIGRhdGE6IGRhdGEuZGF0YSwgLy8gZXhwZWN0aW5nIGFycmF5IG9mIG9iamVjdHMgd2l0aCBJRHNcbiAgICBwYWdpbmF0aW9uOiBkYXRhLnBhZ2luYXRpb24vLyBleHBlY3Rpbmcgb2JqZWN0IHdpdGggSURcbiAgfSk7XG59LFxucGFyc2VUYWdzID0gZnVuY3Rpb24ocmVzcG9uc2UpXG57XG4gIGxldCBhdGFnVHlwZXMgPSB7fVxuICBmb3IobGV0IGkgaW4gcmVzcG9uc2UuZGF0YS5kYXRhKVxuICB7XG4gICAgbGV0IGF0YWcgPSByZXNwb25zZS5kYXRhLmRhdGFbaV1cbiAgICBsZXQgdHlwZSA9IGF0YWcuYXRhZ190eXBlPyBhdGFnLmF0YWdfdHlwZToge1xuICAgICAgaWQ6IDAsXG4gICAgICBuYW1lOiAnQXV0cmVzJyxcbiAgICAgIGV4Y2x1c2l2ZTogZmFsc2UsXG4gICAgICBvcmRlcjogMTAwMFxuICAgIH1cblxuICAgIGlmKCFhdGFnVHlwZXNbdHlwZS5uYW1lXSkgYXRhZ1R5cGVzW3R5cGUubmFtZV0gPSBPYmplY3QuYXNzaWduKHthdGFnczogW119LCB0eXBlKVxuICAgIGF0YWdUeXBlc1t0eXBlLm5hbWVdLmF0YWdzLnB1c2goYXRhZylcbiAgfVxuXG4gIC8vIHNvcnRcbiAgbGV0IGtleXNTb3J0ZWQgPSBPYmplY3Qua2V5cyhhdGFnVHlwZXMpLnNvcnQoZnVuY3Rpb24oYSxiKXtyZXR1cm4gYXRhZ1R5cGVzW2FdLm9yZGVyLWF0YWdUeXBlc1tiXS5vcmRlcn0pXG4gIGxldCB0eXBlcyA9IFtdXG4gIGZvcihsZXQgaSBpbiBrZXlzU29ydGVkKSB0eXBlcy5wdXNoKGF0YWdUeXBlc1trZXlzU29ydGVkW2ldXSlcblxuICAvLyByZXR1cm4gdGFnc1xuICByZXR1cm4ge2RhdGE6IHR5cGVzfVxufVxuXG5leHBvcnQgeyBjbGllbnQsIHBhcnNlUmVzcG9uc2UsIHBhcnNlUmVzcG9uc2VXaXRoUGFnaW5hdGUsIHBhcnNlVGFncyB9XG4iLCJ2YXIgcmVuZGVyID0gZnVuY3Rpb24oKSB7XG4gIHZhciBfdm0gPSB0aGlzXG4gIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudFxuICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2hcbiAgcmV0dXJuIF92bS5zaG93XG4gICAgPyBfYyhcbiAgICAgICAgXCJkaXZcIixcbiAgICAgICAge1xuICAgICAgICAgIHN0YXRpY0NsYXNzOiBcIm1vZGFsLW1hc2tcIixcbiAgICAgICAgICBhdHRyczogeyBpZDogXCJwYWdlcy1zZWN0aW9uLW1vZGFsXCIsIHRyYW5zaXRpb246IFwibW9kYWxcIiB9XG4gICAgICAgIH0sXG4gICAgICAgIFtcbiAgICAgICAgICBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcIm1vZGFsLXdyYXBwZXJcIiB9LCBbXG4gICAgICAgICAgICBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcIm1vZGFsLWNvbnRhaW5lciBjb250YWluZXJcIiB9LCBbXG4gICAgICAgICAgICAgIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwiY3VzdG9tLW1vZGFsLWhlYWRlclwiIH0sIFtcbiAgICAgICAgICAgICAgICBfdm0uX3YoXCJcXG4gICAgICAgIFNlY3Rpb24gc2VsZWN0aW9uXFxuICAgICAgXCIpXG4gICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6IFwiY3VzdG9tLW1vZGFsLWJvZHlcIiB9LFxuICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgIF92bS5fbChfdm0uZXJyb3JzLCBmdW5jdGlvbihlcnJvciwgaW5kZXgpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jKFxuICAgICAgICAgICAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwiYWxlcnQgYWxlcnQtd2FybmluZyBhbGVydC1kaXNtaXNzaWJsZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgXCJ0cmFjay1ieVwiOiBcIiRpbmRleFwiLCByb2xlOiBcImFsZXJ0XCIgfVxuICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgIFwiYnV0dG9uXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJjbG9zZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHR5cGU6IFwiYnV0dG9uXCIsIFwiYXJpYS1sYWJlbFwiOiBcIkNsb3NlXCIgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uZXJyb3JzID0gW11cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcInNwYW5cIiwgeyBhdHRyczogeyBcImFyaWEtaGlkZGVuXCI6IFwidHJ1ZVwiIH0gfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiw5dcIilcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKVxuICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwic3Ryb25nXCIsIFtfdm0uX3YoXCJXYXRjaCBvdXQhXCIpXSksXG4gICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIgKyBfdm0uX3MoZXJyb3IpICsgXCJcXG4gICAgICAgIFwiKVxuICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgX3ZtLmxvYWRpbmdcbiAgICAgICAgICAgICAgICAgICAgPyBfYyhcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiBcImF0dGFjaG1lbnQtbG9hZGluZy1jb250YWluZXJcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcImltZ1wiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwiaW1nLXJlc3BvbnNpdmVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBzcmM6IF92bS51cmwgKyBcImltZy9hZG1pbi9sb2FkaW5nLmdpZlwiIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksXG4gICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgIV92bS5sb2FkaW5nXG4gICAgICAgICAgICAgICAgICAgID8gX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJyb3dcIiB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcImNvbC14cy0xMlwiIH0sIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJ0YWJsZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInRhYmxlIHRhYmxlLWJvcmRlcmVkIHRhYmxlLXN0cmlwZWQgdGFibGUtY29uZGVuc2VkIHRhYmxlLWhvdmVyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fbSgwKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX2woX3ZtLnNlY3Rpb25UeXBlcywgZnVuY3Rpb24oXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlY3Rpb25UeXBlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmRleFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfYyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInRyXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBhdHRyczogeyBpZDogXCJzZWN0aW9uLXR5cGUtXCIgKyBpbmRleCB9IH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJ0ZFwiLCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxcbiAgICAgICAgICAgICAgICAgIFwiICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhzZWN0aW9uVHlwZS5uYW1lKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxcbiAgICAgICAgICAgICAgICBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcInRkXCIsIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJidG4tZ3JvdXBcIiB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImFcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJidG4gYnRuLXhzIGJ0bi1maWxsIGJ0bi1pbmZvXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZjogXCIjXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcm9sZTogXCJidXR0b25cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uYWRkU2VjdGlvbihcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VjdGlvblR5cGUuaWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxcbiAgICAgICAgICAgICAgICAgICAgICBTZWxlY3RcXG4gICAgICAgICAgICAgICAgICAgIFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJ0clwiLCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwidGRcIiwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwiaW5wdXQtZ3JvdXBcIiB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJzcGFuXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6IFwiaW5wdXQtZ3JvdXAtYWRkb25cIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KFwiU2VjdGlvbiB0eXBlIG5hbWUgwqDCoFwiKV1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJpbnB1dFwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIm1vZGVsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiBcInYtbW9kZWxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0ubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246IFwibmFtZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJmb3JtLWNvbnRyb2xcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdHlwZTogXCJ0ZXh0XCIsIHBsYWNlaG9sZGVyOiBcIlwiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVByb3BzOiB7IHZhbHVlOiBfdm0ubmFtZSB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0OiBmdW5jdGlvbigkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkZXZlbnQudGFyZ2V0LmNvbXBvc2luZykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5uYW1lID0gJGV2ZW50LnRhcmdldC52YWx1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJ0ZFwiLCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJidG4tZ3JvdXBcIiB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJhXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiYnRuIGJ0bi14cyBidG4tZmlsbCBidG4tc3VjY2Vzc1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6IFwiI1wiLCByb2xlOiBcImJ1dHRvblwiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5jcmVhdGVTZWN0aW9uVHlwZSgpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJcXG4gICAgICAgICAgICAgICAgICAgICAgT3IgY3JlYXRlXFxuICAgICAgICAgICAgICAgICAgICBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgMlxuICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICBdKVxuICAgICAgICAgICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksXG4gICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgX2MoXCJwXCIpLFxuICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwiY3VzdG9tLW1vZGFsLWZvb3RlclwiIH0sIFtcbiAgICAgICAgICAgICAgICAgICAgX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJidG4tZ3JvdXBcIiB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICBcImJ1dHRvblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIm1vZGFsLWRlZmF1bHQtYnV0dG9uIGJ0biBidG4tZmlsbCBidG4td2FybmluZ1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyB0eXBlOiBcImJ1dHRvblwiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5jbG9zZSgpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdihcIlxcbiAgICAgICAgICAgICAgQ2xvc2VcXG4gICAgICAgICAgICBcIildXG4gICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICBdKVxuICAgICAgICAgICAgICAgICAgXSlcbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIDJcbiAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgXSlcbiAgICAgICAgICBdKVxuICAgICAgICBdXG4gICAgICApXG4gICAgOiBfdm0uX2UoKVxufVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtcbiAgZnVuY3Rpb24oKSB7XG4gICAgdmFyIF92bSA9IHRoaXNcbiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2hcbiAgICByZXR1cm4gX2MoXCJ0clwiLCBbXG4gICAgICBfYyhcInRoXCIsIFtfdm0uX3YoXCJOYW1lXCIpXSksXG4gICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgX2MoXCJ0aFwiLCBbX3ZtLl92KFwiQWN0aW9uc1wiKV0pXG4gICAgXSlcbiAgfVxuXVxucmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCI8dGVtcGxhdGU+XG4gIDxkaXYgaWQ9XCJwYWdlcy1zZWN0aW9uLW1vZGFsXCIgY2xhc3M9XCJtb2RhbC1tYXNrXCIgdi1pZj1cInNob3dcIiB0cmFuc2l0aW9uPVwibW9kYWxcIj5cbiAgICA8ZGl2IGNsYXNzPVwibW9kYWwtd3JhcHBlclwiPlxuICAgICAgPGRpdiBjbGFzcz1cIm1vZGFsLWNvbnRhaW5lciBjb250YWluZXJcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImN1c3RvbS1tb2RhbC1oZWFkZXJcIj5cbiAgICAgICAgICBTZWN0aW9uIHNlbGVjdGlvblxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImN1c3RvbS1tb2RhbC1ib2R5XCI+XG5cbiAgICAgICAgICA8IS0tIFdBUk5JTkdTIC0tPlxuICAgICAgICAgIDxkaXYgdi1mb3I9XCIoZXJyb3IsIGluZGV4KSBpbiBlcnJvcnNcIiB0cmFjay1ieT1cIiRpbmRleFwiIGNsYXNzPVwiYWxlcnQgYWxlcnQtd2FybmluZyBhbGVydC1kaXNtaXNzaWJsZVwiIHJvbGU9XCJhbGVydFwiPlxuICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJjbG9zZVwiICBhcmlhLWxhYmVsPVwiQ2xvc2VcIiBAY2xpY2s9XCJlcnJvcnMgPSBbXVwiID48c3BhbiBhcmlhLWhpZGRlbj1cInRydWVcIj4mdGltZXM7PC9zcGFuPjwvYnV0dG9uPlxuICAgICAgICAgICAgPHN0cm9uZz5XYXRjaCBvdXQhPC9zdHJvbmc+IHt7ZXJyb3J9fVxuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPCEtLSBsb2FkaW5nIC0tPlxuICAgICAgICAgIDxkaXYgdi1pZj1cImxvYWRpbmdcIiBjbGFzcz1cImF0dGFjaG1lbnQtbG9hZGluZy1jb250YWluZXJcIj5cbiAgICAgICAgICAgIDxpbWcgdi1iaW5kOnNyYz1cInVybCsnaW1nL2FkbWluL2xvYWRpbmcuZ2lmJ1wiIGNsYXNzPVwiaW1nLXJlc3BvbnNpdmVcIiAvPlxuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPCEtLSBzZWN0aW9uVHlwZXMgc2VsZWN0aW9uIC0tPlxuICAgICAgICAgIDxkaXYgdi1pZj1cIiFsb2FkaW5nXCIgY2xhc3M9XCJyb3dcIiA+XG4gICAgICAgICAgICA8IS0tIGxpc3Qgb3B0aW9uIC0tPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbC14cy0xMlwiPlxuICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9XCJ0YWJsZSB0YWJsZS1ib3JkZXJlZCB0YWJsZS1zdHJpcGVkIHRhYmxlLWNvbmRlbnNlZCB0YWJsZS1ob3ZlclwiPlxuICAgICAgICAgICAgICAgIDwhLS0gcm93IC0tPlxuICAgICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICAgIDx0aD5OYW1lPC90aD5cbiAgICAgICAgICAgICAgICAgIDx0aD5BY3Rpb25zPC90aD5cbiAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgIDx0ciB2LWZvcj1cIihzZWN0aW9uVHlwZSwgaW5kZXgpIGluIHNlY3Rpb25UeXBlc1wiIDppZD1cIidzZWN0aW9uLXR5cGUtJytpbmRleFwiPlxuICAgICAgICAgICAgICAgICAgPHRkPlxuICAgICAgICAgICAgICAgICAgICB7e3NlY3Rpb25UeXBlLm5hbWV9fVxuICAgICAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgICAgICAgIDx0ZD5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJ0bi1ncm91cFwiPlxuICAgICAgICAgICAgICAgICAgICAgIDwhLS0gZGF0YSAtLT5cbiAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiI1wiIGNsYXNzPVwiYnRuIGJ0bi14cyBidG4tZmlsbCBidG4taW5mb1wiIHJvbGU9XCJidXR0b25cIiBAY2xpY2s9XCJhZGRTZWN0aW9uKHNlY3Rpb25UeXBlLmlkKVwiID5cbiAgICAgICAgICAgICAgICAgICAgICAgIFNlbGVjdFxuICAgICAgICAgICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICA8L3RkPlxuXG4gICAgICAgICAgICAgICAgPC90cj5cblxuICAgICAgICAgICAgICAgIDwhLS0gYWRkIG9uZSAtLT5cbiAgICAgICAgICAgICAgICA8dHIgPlxuICAgICAgICAgICAgICAgICAgPHRkPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaW5wdXQtZ3JvdXBcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImlucHV0LWdyb3VwLWFkZG9uXCI+U2VjdGlvbiB0eXBlIG5hbWUgJm5ic3A7Jm5ic3A7PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB2LW1vZGVsPVwibmFtZVwiIHR5cGU9XCJ0ZXh0XCIgY2xhc3M9XCJmb3JtLWNvbnRyb2xcIiBwbGFjZWhvbGRlcj1cIlwiPlxuXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgICAgICAgIDx0ZD5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJ0bi1ncm91cFwiPlxuICAgICAgICAgICAgICAgICAgICAgIDwhLS0gZGF0YSAtLT5cbiAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiI1wiIGNsYXNzPVwiYnRuIGJ0bi14cyBidG4tZmlsbCBidG4tc3VjY2Vzc1wiIHJvbGU9XCJidXR0b25cIiBAY2xpY2s9XCJjcmVhdGVTZWN0aW9uVHlwZSgpXCIgPlxuICAgICAgICAgICAgICAgICAgICAgICAgT3IgY3JlYXRlXG4gICAgICAgICAgICAgICAgICAgICAgPC9hPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgIDwvdGQ+XG5cbiAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICA8L3RhYmxlPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8cD48L3A+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImN1c3RvbS1tb2RhbC1mb290ZXJcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJidG4tZ3JvdXBcIj5cbiAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJtb2RhbC1kZWZhdWx0LWJ1dHRvbiBidG4gYnRuLWZpbGwgYnRuLXdhcm5pbmdcIiBAY2xpY2s9XCJjbG9zZSgpXCI+XG4gICAgICAgICAgICAgICAgQ2xvc2VcbiAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5pbXBvcnQgeyBjbGllbnQgfSBmcm9tICdAL2h0dHAvY2xpZW50LmpzJ1xuXG5leHBvcnQgZGVmYXVsdFxue1xuICBuYW1lOiAncGFnZXMtc2VjdGlvbi1tb2RhbCcsXG4gIGRhdGE6IGZ1bmN0aW9uKCl7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5hbWU6ICcnLFxuICAgICAgbG9hZGluZzogdHJ1ZSxcbiAgICAgIHNob3c6IGZhbHNlLFxuICAgICAgZXJyb3JzOiBbXSxcbiAgICAgIHNlY3Rpb25UeXBlczogW10sXG4gICAgICBwYWdpbmF0aW9uOiB7XG4gICAgICAgIFwicGFnZV9jb3VudFwiOiAxLFxuICAgICAgICBcImN1cnJlbnRfcGFnZVwiOiAxLFxuICAgICAgICBcImhhc19uZXh0X3BhZ2VcIjogZmFsc2UsXG4gICAgICAgIFwiaGFzX3ByZXZfcGFnZVwiOiBmYWxzZSxcbiAgICAgICAgXCJjb3VudFwiOiAwLFxuICAgICAgICBcImxpbWl0XCI6IDEwMFxuICAgICAgfVxuICAgIH07XG4gIH0sXG4gIHByb3BzOiB7XG4gICAgdXJsOlN0cmluZyxcbiAgICBwYWdlOiBPYmplY3QsXG4gIH0sXG4gIGNyZWF0ZWQ6IGZ1bmN0aW9uKCl7XG4gICAgaWYod2luZG93Lm1haW5FdmVudEh1YlsncGFnZSddID09IHVuZGVmaW5lZCkgd2luZG93Lm1haW5FdmVudEh1YlsncGFnZSddID0gbmV3IFZ1ZSgpO1xuICAgIHdpbmRvdy5tYWluRXZlbnRIdWJbJ3BhZ2UnXS4kb24oJ29wZW4tc2VjdGlvbi1tb2RhbCcsIHRoaXMub3Blbik7XG4gIH0sXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uKCl7XG4gICAgLy9nZXQgc2VjdGlvbiB0eXBlcyBoZXJlIG9yIG5vdFxuICB9LFxuICBtZXRob2RzOiB7XG5cbiAgICBjbG9zZTogZnVuY3Rpb24oKXtcbiAgICAgIHRoaXMuc2hvdyA9IGZhbHNlO1xuICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7XG4gICAgICB3aW5kb3cubWFpbkV2ZW50SHViWydwYWdlJ10uJGVtaXQoJ3BhZ2Utc2VjdGlvbi1tb2RhbC1jbG9zZWQnKTtcbiAgICB9LFxuICAgIG9wZW46IGZ1bmN0aW9uKCl7XG4gICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlO1xuICAgICAgdGhpcy5zaG93ID0gdHJ1ZTtcbiAgICAgIHRoaXMuZ2V0U2VjdGlvblR5cGVzKCk7XG4gICAgfSxcbiAgICBnZXRTZWN0aW9uVHlwZXM6IGZ1bmN0aW9uKCl7XG4gICAgICB0aGlzLm5hbWUgPSAnJztcbiAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7XG4gICAgICB2YXIgcGFyYW1zID0ge3BhZ2U6IHRoaXMucGFnaW5hdGlvbi5jdXJyZW50X3BhZ2V9O1xuICAgICAgY2xpZW50LmdldCh0aGlzLnVybCsnYWRtaW4vcGFnZXMvU2VjdGlvblR5cGVzLmpzb24nLCB7IHBhcmFtczogcGFyYW1zIH0pXG4gICAgICAudGhlbih0aGlzLmdldFNlY3Rpb25UeXBlc1N1Y2Nlc3NDYWxsYmFjaywgdGhpcy5lcnJvckNhbGxiYWNrKTtcbiAgICB9LFxuICAgIGFkZFNlY3Rpb246IGZ1bmN0aW9uKGlkKXtcbiAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7XG4gICAgICBsZXQgZGF0YSA9IG5ldyBGb3JtRGF0YSgpXG4gICAgICBkYXRhLmFwcGVuZCgncGFnZV9pZCcsIHRoaXMucGFnZS5pZClcbiAgICAgIGRhdGEuYXBwZW5kKCdzZWN0aW9uX3R5cGVfaWQnLCBpZClcbiAgICAgIGRhdGEuYXBwZW5kKCdfY3NyZlRva2VuJywgd2luZG93LmdldENzcmZUb2tlbigpKVxuICAgICAgY2xpZW50LnBvc3QodGhpcy51cmwrJ2FkbWluL3BhZ2VzL1NlY3Rpb25zL2FkZC5qc29uJywgZGF0YSlcbiAgICAgIC50aGVuKHRoaXMuY3JlYXRlU2VjdGlvblR5cGVTdWNjZXNzQ2FsbGJhY2ssIHRoaXMuZXJyb3JDYWxsYmFjayk7XG4gICAgfSxcbiAgICBjcmVhdGVTZWN0aW9uVHlwZTogZnVuY3Rpb24oKXtcbiAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7XG4gICAgICBsZXQgZGF0YSA9IG5ldyBGb3JtRGF0YSgpXG4gICAgICBkYXRhLmFwcGVuZCgnbmFtZScsIHRoaXMubmFtZSlcbiAgICAgIGRhdGEuYXBwZW5kKCdfY3NyZlRva2VuJywgd2luZG93LmdldENzcmZUb2tlbigpKVxuICAgICAgY2xpZW50LnBvc3QodGhpcy51cmwrJ2FkbWluL3BhZ2VzL1NlY3Rpb25UeXBlcy9hZGQuanNvbicsIGRhdGEpXG4gICAgICAudGhlbih0aGlzLmdldFNlY3Rpb25UeXBlcywgdGhpcy5lcnJvckNhbGxiYWNrKTtcbiAgICB9LFxuICAgIGNyZWF0ZVNlY3Rpb25UeXBlU3VjY2Vzc0NhbGxiYWNrOiBmdW5jdGlvbihyZXNwb25zZSl7XG4gICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlO1xuICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpO1xuICAgICAgY2xpZW50LmdldCh0aGlzLnVybCsnYWRtaW4vcGFnZXMvU2VjdGlvbnMvdmlldy8nK3Jlc3BvbnNlLmRhdGEuZGF0YS5pZCsnLmpzb24nKVxuICAgICAgLnRoZW4odGhpcy5nZXRTZWN0aW9uU3VjY2Vzc0NhbGxiYWNrLCB0aGlzLmVycm9yQ2FsbGJhY2spO1xuICAgIH0sXG4gICAgZ2V0U2VjdGlvblN1Y2Nlc3NDYWxsYmFjazogZnVuY3Rpb24ocmVzcG9uc2Upe1xuICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7XG4gICAgICB2YXIgc2VjdGlvbiA9IHJlc3BvbnNlLmRhdGEuZGF0YTtcbiAgICAgIHRoaXMucGFnZS5zZWN0aW9ucy5wdXNoKHNlY3Rpb24pO1xuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH0sXG4gICAgZ2V0U2VjdGlvblR5cGVzU3VjY2Vzc0NhbGxiYWNrOiBmdW5jdGlvbihyZXNwb25zZSl7XG4gICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTtcbiAgICAgIHRoaXMuc2VjdGlvblR5cGVzID0gcmVzcG9uc2UuZGF0YS5kYXRhO1xuICAgICAgdGhpcy5wYWdpbmF0aW9uID0gcmVzcG9uc2UuZGF0YS5wYWdpbmF0aW9uO1xuXG4gICAgfSxcbiAgICBlcnJvckNhbGxiYWNrOiBmdW5jdGlvbihyZXNwb25zZSl7XG4gICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTtcbiAgICAgIHZhciBtZXNzYWdlID0gKCByZXNwb25zZS5kYXRhICk/IHJlc3BvbnNlLmRhdGEuZGF0YS5tZXNzYWdlIDogJ1lvdXIgc2Vzc2lvbiBpcyBsb3N0LCBwbGVhc2UgbG9naW4gYWdhaW4hJztcbiAgICAgIHRoaXMuZXJyb3JzLnB1c2gobWVzc2FnZSk7XG4gICAgfSxcbiAgfVxufVxuPC9zY3JpcHQ+XG4iLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzPz9jbG9uZWRSdWxlU2V0LTFbMF0ucnVsZXNbMF0udXNlIS4uLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vU2VjdGlvbk1vZGFsLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz8/Y2xvbmVkUnVsZVNldC0xWzBdLnJ1bGVzWzBdLnVzZSEuLi8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL1NlY3Rpb25Nb2RhbC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL1NlY3Rpb25Nb2RhbC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NDZhM2U3M2QmXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vU2VjdGlvbk1vZGFsLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vU2VjdGlvbk1vZGFsLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7XG4gIHZhciBhcGkgPSByZXF1aXJlKFwiL1VzZXJzL2FudG9pbmUvU2l0ZXMvY2FrZXBocC1hcHAvbm9kZV9tb2R1bGVzL3Z1ZS1ob3QtcmVsb2FkLWFwaS9kaXN0L2luZGV4LmpzXCIpXG4gIGFwaS5pbnN0YWxsKHJlcXVpcmUoJ3Z1ZScpKVxuICBpZiAoYXBpLmNvbXBhdGlibGUpIHtcbiAgICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gICAgaWYgKCFhcGkuaXNSZWNvcmRlZCgnNDZhM2U3M2QnKSkge1xuICAgICAgYXBpLmNyZWF0ZVJlY29yZCgnNDZhM2U3M2QnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbG9hZCgnNDZhM2U3M2QnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXCIuL1NlY3Rpb25Nb2RhbC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NDZhM2U3M2QmXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGFwaS5yZXJlbmRlcignNDZhM2U3M2QnLCB7XG4gICAgICAgIHJlbmRlcjogcmVuZGVyLFxuICAgICAgICBzdGF0aWNSZW5kZXJGbnM6IHN0YXRpY1JlbmRlckZuc1xuICAgICAgfSlcbiAgICB9KVxuICB9XG59XG5jb21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcInZlbmRvci8zeHcvY2FrZXBocC1wYWdlcy9yZXNvdXJjZXMvYXNzZXRzL2NvbXBvbmVudHMvU2VjdGlvbk1vZGFsLnZ1ZVwiXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=