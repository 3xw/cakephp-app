(self["webpackChunkcake_webpack"] = self["webpackChunkcake_webpack"] || []).push([[654,354],{

/***/ 768:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Lp": () => (/* binding */ client)
/* harmony export */ });
/* unused harmony exports parseResponse, parseResponseWithPaginate, parseTags */
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(600);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }


var Http = axios__WEBPACK_IMPORTED_MODULE_0___default().create({
  headers: {
    'X-CSRF-TOKEN': window.getCsrfToken(),
    'Accept': 'application/json',
    'Content-Type': 'application/json'
  }
});

var client = /*#__PURE__*/function (_Http) {
  _inherits(client, _Http);

  var _super = _createSuper(client);

  function client() {
    _classCallCheck(this, client);

    return _super.apply(this, arguments);
  }

  return client;
}(Http);

var parseResponse = function parseResponse(response) {
  return {
    data: response.data.data // expecting object with ID

  };
},
    parseResponseWithPaginate = function parseResponseWithPaginate(response) {
  var data = response.data;
  return Object.assign({}, response, {
    data: data.data,
    // expecting array of objects with IDs
    pagination: data.pagination // expecting object with ID

  });
},
    parseTags = function parseTags(response) {
  var atagTypes = {};

  for (var i in response.data.data) {
    var atag = response.data.data[i];
    var type = atag.atag_type ? atag.atag_type : {
      id: 0,
      name: 'Autres',
      exclusive: false,
      order: 1000
    };
    if (!atagTypes[type.name]) atagTypes[type.name] = Object.assign({
      atags: []
    }, type);
    atagTypes[type.name].atags.push(atag);
  } // sort


  var keysSorted = Object.keys(atagTypes).sort(function (a, b) {
    return atagTypes[a].order - atagTypes[b].order;
  });
  var types = [];

  for (var _i in keysSorted) {
    types.push(atagTypes[keysSorted[_i]]);
  } // return tags


  return {
    data: types
  };
};



/***/ }),

/***/ 592:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "default": () => (/* binding */ Page)
});

;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./vendor/3xw/cakephp-pages/resources/assets/components/Page.vue?vue&type=template&id=39452884&scoped=true&
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "content" }, [
    _c(
      "div",
      { staticClass: "container-fluid trois-pages" },
      [
        _c("pages-section-modal", { attrs: { url: _vm.url, page: _vm.page } }),
        _vm._v(" "),
        _c(
          "draggable",
          {
            on: { end: _vm.onSectionDragEnd },
            model: {
              value: _vm.page.sections,
              callback: function($$v) {
                _vm.$set(_vm.page, "sections", $$v)
              },
              expression: "page.sections"
            }
          },
          _vm._l(_vm.page.sections, function(section, sectionIndex) {
            return _c(
              "section",
              {
                staticClass: "trois-pages__section card",
                attrs: {
                  id: "section-" + sectionIndex,
                  "data-section-index": sectionIndex,
                  "data-id": section.id
                }
              },
              [
                _c(
                  "div",
                  { staticClass: "card-body" },
                  [
                    _c("h3", { staticClass: "card-title" }, [
                      _vm._v(_vm._s(section.section_type.name))
                    ]),
                    _vm._v(" "),
                    _c("h6", { staticClass: "card-subtitle mb-2 text-muted" }, [
                      _vm._v("section")
                    ]),
                    _vm._v(" "),
                    _c(
                      "draggable",
                      {
                        staticClass: "row",
                        on: { end: _vm.onArticleDragEnd },
                        model: {
                          value: section.articles,
                          callback: function($$v) {
                            _vm.$set(section, "articles", $$v)
                          },
                          expression: "section.articles"
                        }
                      },
                      _vm._l(section.articles, function(article, index) {
                        return _c(
                          "article",
                          {
                            staticClass: "trois-pages__section__article col-6",
                            attrs: {
                              id: "article-" + index,
                              "data-index": index,
                              "data-section-index": sectionIndex
                            }
                          },
                          [
                            _c("div", { staticClass: "card" }, [
                              _c("div", { staticClass: "card-body" }, [
                                _c("h4", { staticClass: "card-title" }, [
                                  _vm._v(_vm._s(article.title))
                                ]),
                                _vm._v(" "),
                                _c(
                                  "h6",
                                  {
                                    staticClass: "card-subtitle mb-2 text-muted"
                                  },
                                  [_vm._v(_vm._s(article.article_type.name))]
                                ),
                                _vm._v(" "),
                                _c(
                                  "button",
                                  {
                                    staticClass: "btn btn-info btn-xs btn-fill",
                                    attrs: { type: "button", name: "button" },
                                    on: {
                                      click: function($event) {
                                        return _vm.goToLocation(
                                          _vm.url +
                                            "admin/pages/Articles/edit/" +
                                            article.id
                                        )
                                      }
                                    }
                                  },
                                  [
                                    _c("i", { staticClass: "material-icons" }, [
                                      _vm._v("edit")
                                    ]),
                                    _vm._v(" Edit article\n                ")
                                  ]
                                ),
                                _vm._v(" "),
                                _c("form", {
                                  staticStyle: { display: "inline-block" },
                                  attrs: {
                                    id: "form-article-" + article.id,
                                    action:
                                      _vm.url +
                                      "admin/pages/Articles/delete/" +
                                      article.id,
                                    method: "post"
                                  }
                                }),
                                _vm._v(" "),
                                _c(
                                  "button",
                                  {
                                    staticClass:
                                      "btn btn-danger btn-xs btn-fill",
                                    attrs: { type: "button", name: "button" },
                                    on: {
                                      click: function($event) {
                                        return _vm.deleteArticle(
                                          section.id,
                                          article.id
                                        )
                                      }
                                    }
                                  },
                                  [
                                    _c("i", { staticClass: "material-icons" }, [
                                      _vm._v("delete")
                                    ]),
                                    _vm._v(" Delete article\n                ")
                                  ]
                                )
                              ])
                            ])
                          ]
                        )
                      }),
                      0
                    ),
                    _vm._v(" "),
                    _c(
                      "button",
                      {
                        staticClass: "btn btn-primary btn-xs btn-fill",
                        attrs: { type: "button", name: "button" },
                        on: {
                          click: function($event) {
                            return _vm.goToLocation(
                              _vm.url + "admin/pages/Articles/add/" + section.id
                            )
                          }
                        }
                      },
                      [
                        _c("i", { staticClass: "material-icons" }, [
                          _vm._v("add")
                        ]),
                        _vm._v(" Add a new article\n          ")
                      ]
                    ),
                    _vm._v(" "),
                    _c("form", {
                      staticStyle: { display: "inline-block" },
                      attrs: {
                        id: "form-section-" + section.id,
                        action:
                          _vm.url + "admin/pages/Sections/delete/" + section.id,
                        method: "post"
                      }
                    }),
                    _vm._v(" "),
                    _c(
                      "button",
                      {
                        staticClass: "btn btn-danger btn-xs btn-fill",
                        attrs: { type: "button", name: "button" },
                        on: {
                          click: function($event) {
                            return _vm.deleteSection(section.id)
                          }
                        }
                      },
                      [
                        _c("i", { staticClass: "material-icons" }, [
                          _vm._v("delete")
                        ]),
                        _vm._v(" Delete section and articles\n          ")
                      ]
                    )
                  ],
                  1
                )
              ]
            )
          }),
          0
        )
      ],
      1
    ),
    _vm._v(" "),
    _c("div", { staticClass: "container-fluid" }, [
      _c(
        "button",
        {
          staticClass: "btn btn-primary btn-xs btn-fill",
          attrs: { type: "button", name: "button" },
          on: {
            click: function($event) {
              return _vm.openSectionModal()
            }
          }
        },
        [
          _c("i", { staticClass: "material-icons" }, [_vm._v("add")]),
          _vm._v(" Add a new section\n    ")
        ]
      )
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true


;// CONCATENATED MODULE: ./vendor/3xw/cakephp-pages/resources/assets/components/Page.vue?vue&type=template&id=39452884&scoped=true&

// EXTERNAL MODULE: ./vendor/3xw/cakephp-pages/resources/assets/components/SectionModal.vue + 4 modules
var SectionModal = __webpack_require__(924);
// EXTERNAL MODULE: ./vendor/3xw/cakephp-pages/resources/assets/http/client.js
var client = __webpack_require__(768);
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-1[0].rules[0].use!./node_modules/vue-loader/lib/index.js??vue-loader-options!./vendor/3xw/cakephp-pages/resources/assets/components/Page.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


/* harmony default export */ const Pagevue_type_script_lang_js_ = ({
  name: 'pages-page',
  components: {
    'pages-section-modal': SectionModal.default
  },
  props: {
    url: String
  },
  data: function data() {
    return {
      page: {},
      section: {},
      article: {}
    };
  },
  created: function created() {
    if (window.mainEventHub['page'] == undefined) window.mainEventHub['page'] = new Vue();
    this.page = window.troisPage;
  },
  computed: {},
  methods: {
    onSectionDragEnd: function onSectionDragEnd(evt) {
      var self = this;
      $('.trois-pages section').each(function (index, elem) {
        var sectionIndex = $(elem).data('section-index');
        self.page.sections[sectionIndex].order = index;
      });
      this.saveNewOrder();
    },
    onArticleDragEnd: function onArticleDragEnd(evt) {
      var sectionIndex = $('#' + evt.item.id).data('section-index');
      var self = this;
      $('#section-' + sectionIndex + ' .trois-pages__section__article').each(function (index, elem) {
        var articleIndex = $(elem).data('index');
        self.page.sections[sectionIndex].articles[articleIndex].order = index;
      });
      this.saveNewOrder();
    },
    goToLocation: function goToLocation(location) {
      window.location = location;
    },
    openSectionModal: function openSectionModal() {
      window.mainEventHub['page'].$emit('open-section-modal');
    },
    getSection: function getSection(id) {
      this.section = null;

      for (var i in this.page.sections) {
        if (this.page.sections[i].id == id) {
          this.sectionId = i;
          this.section = this.page.sections[i];
          return this.section;
        }
      }
    },
    getArtcile: function getArtcile(sectionId, artcileId) {
      this.getSection(sectionId);
      this.article = null;

      for (var i in this.section.articles) {
        if (this.section.articles[i].id == artcileId) {
          this.articleId = i;
          this.article = this.section.articles[i];
          return this.article;
        }
      }
    },
    deleteSection: function deleteSection(id) {
      this.getSection(id);

      if (confirm('Are you sure you want to delete section: "' + this.section.section_type.name + '" ?')) {
        $('#form-section-' + id).submit();
      }
    },
    deleteArticle: function deleteArticle(sectionId, artcileId) {
      this.getArtcile(sectionId, artcileId);

      if (confirm('Are you sure you want to delete artcile: "' + this.article.title + '" ?')) {
        $('#form-article-' + artcileId).submit();
      }
    },
    saveNewOrder: function saveNewOrder() {
      var data = new FormData();
      data.append('sections', JSON.stringify(this.page.sections));
      data.append('_csrfToken', window.getCsrfToken());
      client/* client.post */.Lp.post(this.url + 'admin/pages/Pages/orderPageContent.json', data).then(this.saveNewOrderSuccess, this.errorCallback);
    },
    saveNewOrderSuccess: function saveNewOrderSuccess(response) {
      console.log(response);
    },
    errorCallback: function errorCallback(response) {
      console.log(response);
      alert('An error occured!');
    }
  }
});
;// CONCATENATED MODULE: ./vendor/3xw/cakephp-pages/resources/assets/components/Page.vue?vue&type=script&lang=js&
 /* harmony default export */ const components_Pagevue_type_script_lang_js_ = (Pagevue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__(900);
;// CONCATENATED MODULE: ./vendor/3xw/cakephp-pages/resources/assets/components/Page.vue





/* normalize component */
;
var component = (0,componentNormalizer/* default */.Z)(
  components_Pagevue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  "39452884",
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "vendor/3xw/cakephp-pages/resources/assets/components/Page.vue"
/* harmony default export */ const Page = (component.exports);

/***/ }),

/***/ 924:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "default": () => (/* binding */ SectionModal)
});

;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./vendor/3xw/cakephp-pages/resources/assets/components/SectionModal.vue?vue&type=template&id=46a3e73d&
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _vm.show
    ? _c(
        "div",
        {
          staticClass: "modal-mask",
          attrs: { id: "pages-section-modal", transition: "modal" }
        },
        [
          _c("div", { staticClass: "modal-wrapper" }, [
            _c("div", { staticClass: "modal-container container" }, [
              _c("div", { staticClass: "custom-modal-header" }, [
                _vm._v("\n        Section selection\n      ")
              ]),
              _vm._v(" "),
              _c(
                "div",
                { staticClass: "custom-modal-body" },
                [
                  _vm._l(_vm.errors, function(error, index) {
                    return _c(
                      "div",
                      {
                        staticClass: "alert alert-warning alert-dismissible",
                        attrs: { "track-by": "$index", role: "alert" }
                      },
                      [
                        _c(
                          "button",
                          {
                            staticClass: "close",
                            attrs: { type: "button", "aria-label": "Close" },
                            on: {
                              click: function($event) {
                                _vm.errors = []
                              }
                            }
                          },
                          [
                            _c("span", { attrs: { "aria-hidden": "true" } }, [
                              _vm._v("×")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("strong", [_vm._v("Watch out!")]),
                        _vm._v(" " + _vm._s(error) + "\n        ")
                      ]
                    )
                  }),
                  _vm._v(" "),
                  _vm.loading
                    ? _c(
                        "div",
                        { staticClass: "attachment-loading-container" },
                        [
                          _c("img", {
                            staticClass: "img-responsive",
                            attrs: { src: _vm.url + "img/admin/loading.gif" }
                          })
                        ]
                      )
                    : _vm._e(),
                  _vm._v(" "),
                  !_vm.loading
                    ? _c("div", { staticClass: "row" }, [
                        _c("div", { staticClass: "col-xs-12" }, [
                          _c(
                            "table",
                            {
                              staticClass:
                                "table table-bordered table-striped table-condensed table-hover"
                            },
                            [
                              _vm._m(0),
                              _vm._v(" "),
                              _vm._l(_vm.sectionTypes, function(
                                sectionType,
                                index
                              ) {
                                return _c(
                                  "tr",
                                  { attrs: { id: "section-type-" + index } },
                                  [
                                    _c("td", [
                                      _vm._v(
                                        "\n                  " +
                                          _vm._s(sectionType.name) +
                                          "\n                "
                                      )
                                    ]),
                                    _vm._v(" "),
                                    _c("td", [
                                      _c("div", { staticClass: "btn-group" }, [
                                        _c(
                                          "a",
                                          {
                                            staticClass:
                                              "btn btn-xs btn-fill btn-info",
                                            attrs: {
                                              href: "#",
                                              role: "button"
                                            },
                                            on: {
                                              click: function($event) {
                                                return _vm.addSection(
                                                  sectionType.id
                                                )
                                              }
                                            }
                                          },
                                          [
                                            _vm._v(
                                              "\n                      Select\n                    "
                                            )
                                          ]
                                        )
                                      ])
                                    ])
                                  ]
                                )
                              }),
                              _vm._v(" "),
                              _c("tr", [
                                _c("td", [
                                  _c("div", { staticClass: "input-group" }, [
                                    _c(
                                      "span",
                                      { staticClass: "input-group-addon" },
                                      [_vm._v("Section type name   ")]
                                    ),
                                    _vm._v(" "),
                                    _c("input", {
                                      directives: [
                                        {
                                          name: "model",
                                          rawName: "v-model",
                                          value: _vm.name,
                                          expression: "name"
                                        }
                                      ],
                                      staticClass: "form-control",
                                      attrs: { type: "text", placeholder: "" },
                                      domProps: { value: _vm.name },
                                      on: {
                                        input: function($event) {
                                          if ($event.target.composing) {
                                            return
                                          }
                                          _vm.name = $event.target.value
                                        }
                                      }
                                    })
                                  ])
                                ]),
                                _vm._v(" "),
                                _c("td", [
                                  _c("div", { staticClass: "btn-group" }, [
                                    _c(
                                      "a",
                                      {
                                        staticClass:
                                          "btn btn-xs btn-fill btn-success",
                                        attrs: { href: "#", role: "button" },
                                        on: {
                                          click: function($event) {
                                            return _vm.createSectionType()
                                          }
                                        }
                                      },
                                      [
                                        _vm._v(
                                          "\n                      Or create\n                    "
                                        )
                                      ]
                                    )
                                  ])
                                ])
                              ])
                            ],
                            2
                          )
                        ])
                      ])
                    : _vm._e(),
                  _vm._v(" "),
                  _c("p"),
                  _vm._v(" "),
                  _c("div", { staticClass: "custom-modal-footer" }, [
                    _c("div", { staticClass: "btn-group" }, [
                      _c(
                        "button",
                        {
                          staticClass:
                            "modal-default-button btn btn-fill btn-warning",
                          attrs: { type: "button" },
                          on: {
                            click: function($event) {
                              return _vm.close()
                            }
                          }
                        },
                        [_vm._v("\n              Close\n            ")]
                      )
                    ])
                  ])
                ],
                2
              )
            ])
          ])
        ]
      )
    : _vm._e()
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("tr", [
      _c("th", [_vm._v("Name")]),
      _vm._v(" "),
      _c("th", [_vm._v("Actions")])
    ])
  }
]
render._withStripped = true


;// CONCATENATED MODULE: ./vendor/3xw/cakephp-pages/resources/assets/components/SectionModal.vue?vue&type=template&id=46a3e73d&

// EXTERNAL MODULE: ./vendor/3xw/cakephp-pages/resources/assets/http/client.js
var client = __webpack_require__(768);
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-1[0].rules[0].use!./node_modules/vue-loader/lib/index.js??vue-loader-options!./vendor/3xw/cakephp-pages/resources/assets/components/SectionModal.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ const SectionModalvue_type_script_lang_js_ = ({
  name: 'pages-section-modal',
  data: function data() {
    return {
      name: '',
      loading: true,
      show: false,
      errors: [],
      sectionTypes: [],
      pagination: {
        "page_count": 1,
        "current_page": 1,
        "has_next_page": false,
        "has_prev_page": false,
        "count": 0,
        "limit": 100
      }
    };
  },
  props: {
    url: String,
    page: Object
  },
  created: function created() {
    if (window.mainEventHub['page'] == undefined) window.mainEventHub['page'] = new Vue();
    window.mainEventHub['page'].$on('open-section-modal', this.open);
  },
  mounted: function mounted() {//get section types here or not
  },
  methods: {
    close: function close() {
      this.show = false;
      this.loading = false;
      window.mainEventHub['page'].$emit('page-section-modal-closed');
    },
    open: function open() {
      this.loading = true;
      this.show = true;
      this.getSectionTypes();
    },
    getSectionTypes: function getSectionTypes() {
      this.name = '';
      this.loading = true;
      var params = {
        page: this.pagination.current_page
      };
      client/* client.get */.Lp.get(this.url + 'admin/pages/SectionTypes.json', {
        params: params
      }).then(this.getSectionTypesSuccessCallback, this.errorCallback);
    },
    addSection: function addSection(id) {
      this.loading = true;
      var data = new FormData();
      data.append('page_id', this.page.id);
      data.append('section_type_id', id);
      data.append('_csrfToken', window.getCsrfToken());
      client/* client.post */.Lp.post(this.url + 'admin/pages/Sections/add.json', data).then(this.createSectionTypeSuccessCallback, this.errorCallback);
    },
    createSectionType: function createSectionType() {
      this.loading = true;
      var data = new FormData();
      data.append('name', this.name);
      data.append('_csrfToken', window.getCsrfToken());
      client/* client.post */.Lp.post(this.url + 'admin/pages/SectionTypes/add.json', data).then(this.getSectionTypes, this.errorCallback);
    },
    createSectionTypeSuccessCallback: function createSectionTypeSuccessCallback(response) {
      this.loading = true;
      console.log(response);
      client/* client.get */.Lp.get(this.url + 'admin/pages/Sections/view/' + response.data.data.id + '.json').then(this.getSectionSuccessCallback, this.errorCallback);
    },
    getSectionSuccessCallback: function getSectionSuccessCallback(response) {
      this.loading = false;
      var section = response.data.data;
      this.page.sections.push(section);
      this.close();
    },
    getSectionTypesSuccessCallback: function getSectionTypesSuccessCallback(response) {
      this.loading = false;
      this.sectionTypes = response.data.data;
      this.pagination = response.data.pagination;
    },
    errorCallback: function errorCallback(response) {
      this.loading = false;
      var message = response.data ? response.data.data.message : 'Your session is lost, please login again!';
      this.errors.push(message);
    }
  }
});
;// CONCATENATED MODULE: ./vendor/3xw/cakephp-pages/resources/assets/components/SectionModal.vue?vue&type=script&lang=js&
 /* harmony default export */ const components_SectionModalvue_type_script_lang_js_ = (SectionModalvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__(900);
;// CONCATENATED MODULE: ./vendor/3xw/cakephp-pages/resources/assets/components/SectionModal.vue





/* normalize component */
;
var component = (0,componentNormalizer/* default */.Z)(
  components_SectionModalvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "vendor/3xw/cakephp-pages/resources/assets/components/SectionModal.vue"
/* harmony default export */ const SectionModal = (component.exports);

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,