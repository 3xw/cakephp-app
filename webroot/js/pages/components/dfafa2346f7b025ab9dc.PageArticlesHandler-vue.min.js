(self["webpackChunkcake_webpack"] = self["webpackChunkcake_webpack"] || []).push([[691],{

/***/ 768:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Lp": () => (/* binding */ client)
/* harmony export */ });
/* unused harmony exports parseResponse, parseResponseWithPaginate, parseTags */
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(600);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }


var Http = axios__WEBPACK_IMPORTED_MODULE_0___default().create({
  headers: {
    'X-CSRF-TOKEN': window.getCsrfToken(),
    'Accept': 'application/json',
    'Content-Type': 'application/json'
  }
});

var client = /*#__PURE__*/function (_Http) {
  _inherits(client, _Http);

  var _super = _createSuper(client);

  function client() {
    _classCallCheck(this, client);

    return _super.apply(this, arguments);
  }

  return client;
}(Http);

var parseResponse = function parseResponse(response) {
  return {
    data: response.data.data // expecting object with ID

  };
},
    parseResponseWithPaginate = function parseResponseWithPaginate(response) {
  var data = response.data;
  return Object.assign({}, response, {
    data: data.data,
    // expecting array of objects with IDs
    pagination: data.pagination // expecting object with ID

  });
},
    parseTags = function parseTags(response) {
  var atagTypes = {};

  for (var i in response.data.data) {
    var atag = response.data.data[i];
    var type = atag.atag_type ? atag.atag_type : {
      id: 0,
      name: 'Autres',
      exclusive: false,
      order: 1000
    };
    if (!atagTypes[type.name]) atagTypes[type.name] = Object.assign({
      atags: []
    }, type);
    atagTypes[type.name].atags.push(atag);
  } // sort


  var keysSorted = Object.keys(atagTypes).sort(function (a, b) {
    return atagTypes[a].order - atagTypes[b].order;
  });
  var types = [];

  for (var _i in keysSorted) {
    types.push(atagTypes[keysSorted[_i]]);
  } // return tags


  return {
    data: types
  };
};



/***/ }),

/***/ 314:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "default": () => (/* binding */ PageArticlesHandler)
});

;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./vendor/3xw/cakephp-pages/resources/assets/components/PageArticlesHandler.vue?vue&type=template&id=4a3c8ed9&scoped=true&
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _vm.show
    ? _c(
        "div",
        {
          staticClass: "modal-mask",
          attrs: { id: "page-articles-handler", transition: "modal" }
        },
        [
          _c("div", { staticClass: "modal-wrapper" }, [
            _c("div", { staticClass: "modal-container container" }, [
              _c("div", { staticClass: "custom-modal-header" }, [
                !_vm.article.id
                  ? _c("span", [_vm._v("Add article")])
                  : _vm._e(),
                _vm._v(" "),
                _vm.article.id ? _c("span", [_vm._v("Edit article")]) : _vm._e()
              ]),
              _vm._v(" "),
              _c(
                "div",
                { staticClass: "custom-modal-body" },
                [
                  _vm._l(_vm.errors, function(error, index) {
                    return _c(
                      "div",
                      {
                        staticClass: "alert alert-warning alert-dismissible",
                        attrs: { "track-by": "$index", role: "alert" }
                      },
                      [
                        _c(
                          "button",
                          {
                            staticClass: "close",
                            attrs: { type: "button", "aria-label": "Close" },
                            on: {
                              click: function($event) {
                                _vm.errors = []
                              }
                            }
                          },
                          [
                            _c("span", { attrs: { "aria-hidden": "true" } }, [
                              _vm._v("Ã—")
                            ])
                          ]
                        ),
                        _vm._v(" "),
                        _c("strong", [_vm._v("Watch out")]),
                        _vm._v(" " + _vm._s(error) + "\n        ")
                      ]
                    )
                  }),
                  _vm._v(" "),
                  _vm.show
                    ? _c("div", [
                        _vm.languages
                          ? _c("div", [
                              _c(
                                "ul",
                                {
                                  staticClass: "nav nav-tabs",
                                  attrs: { role: "tablist" }
                                },
                                _vm._l(_vm.languages, function(
                                  language,
                                  index
                                ) {
                                  return _c(
                                    "li",
                                    {
                                      class: {
                                        active: language == _vm.defaultLocale
                                      },
                                      attrs: { role: "presentation" }
                                    },
                                    [
                                      _c(
                                        "a",
                                        {
                                          attrs: {
                                            href: "#a-" + language,
                                            "aria-controls": "a-" + language,
                                            role: "tab",
                                            "data-toggle": "tab"
                                          }
                                        },
                                        [
                                          _vm._v(
                                            "\n                  " +
                                              _vm._s(language) +
                                              "\n                "
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                }),
                                0
                              ),
                              _vm._v(" "),
                              _c(
                                "div",
                                { staticClass: "tab-content" },
                                _vm._l(_vm.languages, function(
                                  language,
                                  index
                                ) {
                                  return _c(
                                    "div",
                                    {
                                      staticClass: "tab-pane",
                                      class:
                                        language == _vm.defaultLocale
                                          ? "active"
                                          : "",
                                      attrs: {
                                        role: "tabpanel",
                                        id: "a-" + language
                                      }
                                    },
                                    _vm._l(_vm.fields, function(field, index) {
                                      return _c("page-input", {
                                        key: field.name,
                                        attrs: {
                                          name: field.name,
                                          type: field.type,
                                          model: _vm.article,
                                          langauge: language
                                        }
                                      })
                                    }),
                                    1
                                  )
                                }),
                                0
                              )
                            ])
                          : _vm._e(),
                        _vm._v(" "),
                        !_vm.languages
                          ? _c(
                              "div",
                              _vm._l(_vm.fields, function(field, index) {
                                return _c("page-input", {
                                  key: field.name,
                                  attrs: {
                                    name: field.name,
                                    type: field.type,
                                    model: _vm.article,
                                    langauge: null
                                  }
                                })
                              }),
                              1
                            )
                          : _vm._e()
                      ])
                    : _vm._e(),
                  _vm._v(" "),
                  _c("p"),
                  _vm._v(" "),
                  _c("div", { staticClass: "custom-modal-footer" }, [
                    _c("div", { staticClass: "btn-group" }, [
                      _c(
                        "button",
                        {
                          staticClass: "modal-default-button btn btn-success",
                          attrs: { type: "button" },
                          on: { click: _vm.save }
                        },
                        [_vm._v("\n              Save\n            ")]
                      ),
                      _vm._v(" "),
                      _c(
                        "button",
                        {
                          staticClass: "modal-default-button btn btn-warning",
                          attrs: { type: "button" },
                          on: { click: _vm.close }
                        },
                        [_vm._v("\n              Close\n            ")]
                      )
                    ])
                  ])
                ],
                2
              )
            ])
          ])
        ]
      )
    : _vm._e()
}
var staticRenderFns = []
render._withStripped = true


;// CONCATENATED MODULE: ./vendor/3xw/cakephp-pages/resources/assets/components/PageArticlesHandler.vue?vue&type=template&id=4a3c8ed9&scoped=true&

// EXTERNAL MODULE: ./vendor/3xw/cakephp-pages/resources/assets/http/client.js
var client = __webpack_require__(768);
;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js??clonedRuleSet-1[0].rules[0].use!./node_modules/vue-loader/lib/index.js??vue-loader-options!./vendor/3xw/cakephp-pages/resources/assets/components/PageArticlesHandler.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ const PageArticlesHandlervue_type_script_lang_js_ = ({
  name: 'page-articles-handler',
  props: {
    languages: Array,
    defaultLocale: String
  },
  data: function data() {
    return {
      baseUrl: this.$root.$el.dataset.webroot,
      article: {},
      errors: [],
      show: false,
      options: {
        headers: {
          "Accept": "application/json",
          "Content-Type": "application/json"
        }
      },
      fields: [{
        name: 'title',
        type: 'text'
      }, {
        name: 'header',
        type: 'text'
      }, {
        name: 'body',
        type: 'textarea'
      }]
    };
  },
  created: function created() {
    this.$hubOn('page', 'article-edit', this.edit);
  },
  mounted: function mounted() {},
  methods: {
    edit: function edit(id) {
      this.article.id = id;
      client/* client.get */.Lp.get(this.baseUrl + 'admin/pages/articles/edit/' + this.article.id, this.options).then(this.loadArticleSuccess, this.error);
    },
    add: function add() {
      alert('article add');
    },
    save: function save() {
      alert('save!!');
      this.close();
    },
    loadArticleSuccess: function loadArticleSuccess(request) {
      this.article = request.body.article;
      this.open();
    },
    error: function error(request) {
      alert('an error occured!');
    },
    open: function open() {
      this.show = true;
    },
    close: function close() {
      this.show = false;
    }
  }
});
;// CONCATENATED MODULE: ./vendor/3xw/cakephp-pages/resources/assets/components/PageArticlesHandler.vue?vue&type=script&lang=js&
 /* harmony default export */ const components_PageArticlesHandlervue_type_script_lang_js_ = (PageArticlesHandlervue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__(900);
;// CONCATENATED MODULE: ./vendor/3xw/cakephp-pages/resources/assets/components/PageArticlesHandler.vue





/* normalize component */
;
var component = (0,componentNormalizer/* default */.Z)(
  components_PageArticlesHandlervue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  "4a3c8ed9",
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "vendor/3xw/cakephp-pages/resources/assets/components/PageArticlesHandler.vue"
/* harmony default export */ const PageArticlesHandler = (component.exports);

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYWtlLXdlYnBhY2svLi92ZW5kb3IvM3h3L2Nha2VwaHAtcGFnZXMvcmVzb3VyY2VzL2Fzc2V0cy9odHRwL2NsaWVudC5qcyIsIndlYnBhY2s6Ly9jYWtlLXdlYnBhY2svLi92ZW5kb3IvM3h3L2Nha2VwaHAtcGFnZXMvcmVzb3VyY2VzL2Fzc2V0cy9jb21wb25lbnRzL1BhZ2VBcnRpY2xlc0hhbmRsZXIudnVlPzlkMzciLCJ3ZWJwYWNrOi8vY2FrZS13ZWJwYWNrL3ZlbmRvci8zeHcvY2FrZXBocC1wYWdlcy9yZXNvdXJjZXMvYXNzZXRzL2NvbXBvbmVudHMvUGFnZUFydGljbGVzSGFuZGxlci52dWUiLCJ3ZWJwYWNrOi8vY2FrZS13ZWJwYWNrLy4vdmVuZG9yLzN4dy9jYWtlcGhwLXBhZ2VzL3Jlc291cmNlcy9hc3NldHMvY29tcG9uZW50cy9QYWdlQXJ0aWNsZXNIYW5kbGVyLnZ1ZT8yMDA1Iiwid2VicGFjazovL2Nha2Utd2VicGFjay8uL3ZlbmRvci8zeHcvY2FrZXBocC1wYWdlcy9yZXNvdXJjZXMvYXNzZXRzL2NvbXBvbmVudHMvUGFnZUFydGljbGVzSGFuZGxlci52dWUiXSwibmFtZXMiOlsiSHR0cCIsImF4aW9zIiwiaGVhZGVycyIsIndpbmRvdyIsImdldENzcmZUb2tlbiIsImNsaWVudCIsInBhcnNlUmVzcG9uc2UiLCJyZXNwb25zZSIsImRhdGEiLCJwYXJzZVJlc3BvbnNlV2l0aFBhZ2luYXRlIiwiT2JqZWN0IiwiYXNzaWduIiwicGFnaW5hdGlvbiIsInBhcnNlVGFncyIsImF0YWdUeXBlcyIsImkiLCJhdGFnIiwidHlwZSIsImF0YWdfdHlwZSIsImlkIiwibmFtZSIsImV4Y2x1c2l2ZSIsIm9yZGVyIiwiYXRhZ3MiLCJwdXNoIiwia2V5c1NvcnRlZCIsImtleXMiLCJzb3J0IiwiYSIsImIiLCJ0eXBlcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFFQSxJQUNBQSxJQUFJ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QzFCLEVBQUUsc0RBQU07QUFDUixFQUFFLE1BQU07QUFDUixFQUFFLGVBQWU7QUFDakI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxJQUFJLEtBQVUsRUFBRSxZQWlCZjtBQUNEO0FBQ0EsMERBQWUsaUIiLCJmaWxlIjoianMvcGFnZXMvY29tcG9uZW50cy9kZmFmYTIzNDZmN2IwMjVhYjlkYy5QYWdlQXJ0aWNsZXNIYW5kbGVyLXZ1ZS5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnXG5cbmNvbnN0XG5IdHRwID0gYXhpb3MuY3JlYXRlKHtcbiAgaGVhZGVyczoge1xuICAgICdYLUNTUkYtVE9LRU4nICAgIDogd2luZG93LmdldENzcmZUb2tlbigpLFxuICAgICdBY2NlcHQnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICB9XG59KVxuXG5jbGFzcyBjbGllbnQgZXh0ZW5kcyBIdHRwIHt9XG5cbmNvbnN0XG5wYXJzZVJlc3BvbnNlID0gZnVuY3Rpb24ocmVzcG9uc2UpXG57XG4gIHJldHVybiB7XG4gICAgZGF0YTogcmVzcG9uc2UuZGF0YS5kYXRhLy8gZXhwZWN0aW5nIG9iamVjdCB3aXRoIElEXG4gIH1cbn0sXG5wYXJzZVJlc3BvbnNlV2l0aFBhZ2luYXRlID0gZnVuY3Rpb24ocmVzcG9uc2UpXG57XG4gIGNvbnN0IHsgZGF0YSB9ID0gcmVzcG9uc2U7XG5cbiAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIHJlc3BvbnNlLCB7XG4gICAgZGF0YTogZGF0YS5kYXRhLCAvLyBleHBlY3RpbmcgYXJyYXkgb2Ygb2JqZWN0cyB3aXRoIElEc1xuICAgIHBhZ2luYXRpb246IGRhdGEucGFnaW5hdGlvbi8vIGV4cGVjdGluZyBvYmplY3Qgd2l0aCBJRFxuICB9KTtcbn0sXG5wYXJzZVRhZ3MgPSBmdW5jdGlvbihyZXNwb25zZSlcbntcbiAgbGV0IGF0YWdUeXBlcyA9IHt9XG4gIGZvcihsZXQgaSBpbiByZXNwb25zZS5kYXRhLmRhdGEpXG4gIHtcbiAgICBsZXQgYXRhZyA9IHJlc3BvbnNlLmRhdGEuZGF0YVtpXVxuICAgIGxldCB0eXBlID0gYXRhZy5hdGFnX3R5cGU/IGF0YWcuYXRhZ190eXBlOiB7XG4gICAgICBpZDogMCxcbiAgICAgIG5hbWU6ICdBdXRyZXMnLFxuICAgICAgZXhjbHVzaXZlOiBmYWxzZSxcbiAgICAgIG9yZGVyOiAxMDAwXG4gICAgfVxuXG4gICAgaWYoIWF0YWdUeXBlc1t0eXBlLm5hbWVdKSBhdGFnVHlwZXNbdHlwZS5uYW1lXSA9IE9iamVjdC5hc3NpZ24oe2F0YWdzOiBbXX0sIHR5cGUpXG4gICAgYXRhZ1R5cGVzW3R5cGUubmFtZV0uYXRhZ3MucHVzaChhdGFnKVxuICB9XG5cbiAgLy8gc29ydFxuICBsZXQga2V5c1NvcnRlZCA9IE9iamVjdC5rZXlzKGF0YWdUeXBlcykuc29ydChmdW5jdGlvbihhLGIpe3JldHVybiBhdGFnVHlwZXNbYV0ub3JkZXItYXRhZ1R5cGVzW2JdLm9yZGVyfSlcbiAgbGV0IHR5cGVzID0gW11cbiAgZm9yKGxldCBpIGluIGtleXNTb3J0ZWQpIHR5cGVzLnB1c2goYXRhZ1R5cGVzW2tleXNTb3J0ZWRbaV1dKVxuXG4gIC8vIHJldHVybiB0YWdzXG4gIHJldHVybiB7ZGF0YTogdHlwZXN9XG59XG5cbmV4cG9ydCB7IGNsaWVudCwgcGFyc2VSZXNwb25zZSwgcGFyc2VSZXNwb25zZVdpdGhQYWdpbmF0ZSwgcGFyc2VUYWdzIH1cbiIsInZhciByZW5kZXIgPSBmdW5jdGlvbigpIHtcbiAgdmFyIF92bSA9IHRoaXNcbiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50XG4gIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaFxuICByZXR1cm4gX3ZtLnNob3dcbiAgICA/IF9jKFxuICAgICAgICBcImRpdlwiLFxuICAgICAgICB7XG4gICAgICAgICAgc3RhdGljQ2xhc3M6IFwibW9kYWwtbWFza1wiLFxuICAgICAgICAgIGF0dHJzOiB7IGlkOiBcInBhZ2UtYXJ0aWNsZXMtaGFuZGxlclwiLCB0cmFuc2l0aW9uOiBcIm1vZGFsXCIgfVxuICAgICAgICB9LFxuICAgICAgICBbXG4gICAgICAgICAgX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJtb2RhbC13cmFwcGVyXCIgfSwgW1xuICAgICAgICAgICAgX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJtb2RhbC1jb250YWluZXIgY29udGFpbmVyXCIgfSwgW1xuICAgICAgICAgICAgICBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcImN1c3RvbS1tb2RhbC1oZWFkZXJcIiB9LCBbXG4gICAgICAgICAgICAgICAgIV92bS5hcnRpY2xlLmlkXG4gICAgICAgICAgICAgICAgICA/IF9jKFwic3BhblwiLCBbX3ZtLl92KFwiQWRkIGFydGljbGVcIildKVxuICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSxcbiAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgIF92bS5hcnRpY2xlLmlkID8gX2MoXCJzcGFuXCIsIFtfdm0uX3YoXCJFZGl0IGFydGljbGVcIildKSA6IF92bS5fZSgpXG4gICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6IFwiY3VzdG9tLW1vZGFsLWJvZHlcIiB9LFxuICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgIF92bS5fbChfdm0uZXJyb3JzLCBmdW5jdGlvbihlcnJvciwgaW5kZXgpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jKFxuICAgICAgICAgICAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwiYWxlcnQgYWxlcnQtd2FybmluZyBhbGVydC1kaXNtaXNzaWJsZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgXCJ0cmFjay1ieVwiOiBcIiRpbmRleFwiLCByb2xlOiBcImFsZXJ0XCIgfVxuICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgIFwiYnV0dG9uXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJjbG9zZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHR5cGU6IFwiYnV0dG9uXCIsIFwiYXJpYS1sYWJlbFwiOiBcIkNsb3NlXCIgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uZXJyb3JzID0gW11cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcInNwYW5cIiwgeyBhdHRyczogeyBcImFyaWEtaGlkZGVuXCI6IFwidHJ1ZVwiIH0gfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiw5dcIilcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKVxuICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwic3Ryb25nXCIsIFtfdm0uX3YoXCJXYXRjaCBvdXRcIildKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiArIF92bS5fcyhlcnJvcikgKyBcIlxcbiAgICAgICAgXCIpXG4gICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICBfdm0uc2hvd1xuICAgICAgICAgICAgICAgICAgICA/IF9jKFwiZGl2XCIsIFtcbiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5sYW5ndWFnZXNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPyBfYyhcImRpdlwiLCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJ1bFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwibmF2IG5hdi10YWJzXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgcm9sZTogXCJ0YWJsaXN0XCIgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX2woX3ZtLmxhbmd1YWdlcywgZnVuY3Rpb24oXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFuZ3VhZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJsaVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjdGl2ZTogbGFuZ3VhZ2UgPT0gX3ZtLmRlZmF1bHRMb2NhbGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgcm9sZTogXCJwcmVzZW50YXRpb25cIiB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImFcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmOiBcIiNhLVwiICsgbGFuZ3VhZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiYXJpYS1jb250cm9sc1wiOiBcImEtXCIgKyBsYW5ndWFnZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcm9sZTogXCJ0YWJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJkYXRhLXRvZ2dsZVwiOiBcInRhYlwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiXFxuICAgICAgICAgICAgICAgICAgXCIgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhsYW5ndWFnZSkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiXFxuICAgICAgICAgICAgICAgIFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogXCJ0YWItY29udGVudFwiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fbChfdm0ubGFuZ3VhZ2VzLCBmdW5jdGlvbihcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYW5ndWFnZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmRleFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJ0YWItcGFuZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzczpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYW5ndWFnZSA9PSBfdm0uZGVmYXVsdExvY2FsZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBcImFjdGl2ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcm9sZTogXCJ0YWJwYW5lbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkOiBcImEtXCIgKyBsYW5ndWFnZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9sKF92bS5maWVsZHMsIGZ1bmN0aW9uKGZpZWxkLCBpbmRleCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2MoXCJwYWdlLWlucHV0XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk6IGZpZWxkLm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IGZpZWxkLm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBmaWVsZC50eXBlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWw6IF92bS5hcnRpY2xlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFuZ2F1Z2U6IGxhbmd1YWdlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksXG4gICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgIV92bS5sYW5ndWFnZXNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPyBfYyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX2woX3ZtLmZpZWxkcywgZnVuY3Rpb24oZmllbGQsIGluZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfYyhcInBhZ2UtaW5wdXRcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleTogZmllbGQubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogZmllbGQubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IGZpZWxkLnR5cGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2RlbDogX3ZtLmFydGljbGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYW5nYXVnZTogbnVsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKVxuICAgICAgICAgICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksXG4gICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgX2MoXCJwXCIpLFxuICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwiY3VzdG9tLW1vZGFsLWZvb3RlclwiIH0sIFtcbiAgICAgICAgICAgICAgICAgICAgX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJidG4tZ3JvdXBcIiB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICBcImJ1dHRvblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJtb2RhbC1kZWZhdWx0LWJ1dHRvbiBidG4gYnRuLXN1Y2Nlc3NcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdHlwZTogXCJidXR0b25cIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBvbjogeyBjbGljazogX3ZtLnNhdmUgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoXCJcXG4gICAgICAgICAgICAgIFNhdmVcXG4gICAgICAgICAgICBcIildXG4gICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJidXR0b25cIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwibW9kYWwtZGVmYXVsdC1idXR0b24gYnRuIGJ0bi13YXJuaW5nXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHR5cGU6IFwiYnV0dG9uXCIgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgb246IHsgY2xpY2s6IF92bS5jbG9zZSB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdihcIlxcbiAgICAgICAgICAgICAgQ2xvc2VcXG4gICAgICAgICAgICBcIildXG4gICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICBdKVxuICAgICAgICAgICAgICAgICAgXSlcbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIDJcbiAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgXSlcbiAgICAgICAgICBdKVxuICAgICAgICBdXG4gICAgICApXG4gICAgOiBfdm0uX2UoKVxufVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5yZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWVcblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsIjx0ZW1wbGF0ZT5cbiAgPGRpdiBpZD1cInBhZ2UtYXJ0aWNsZXMtaGFuZGxlclwiIGNsYXNzPVwibW9kYWwtbWFza1wiIHYtaWY9XCJzaG93XCIgdHJhbnNpdGlvbj1cIm1vZGFsXCI+XG4gICAgPGRpdiBjbGFzcz1cIm1vZGFsLXdyYXBwZXJcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJtb2RhbC1jb250YWluZXIgY29udGFpbmVyXCI+XG5cbiAgICAgICAgPCEtLSBoZWFkZXIgLS0+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjdXN0b20tbW9kYWwtaGVhZGVyXCI+XG4gICAgICAgICAgPHNwYW4gdi1pZj1cIiFhcnRpY2xlLmlkXCI+QWRkIGFydGljbGU8L3NwYW4+XG4gICAgICAgICAgPHNwYW4gdi1pZj1cImFydGljbGUuaWRcIj5FZGl0IGFydGljbGU8L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIDwhLS0gYm9keSAtLT5cbiAgICAgICAgPGRpdiBjbGFzcz1cImN1c3RvbS1tb2RhbC1ib2R5XCI+XG5cbiAgICAgICAgICA8IS0tIFdBUk5JTkdTIC0tPlxuICAgICAgICAgIDxkaXYgdi1mb3I9XCIoZXJyb3IsIGluZGV4KSBpbiBlcnJvcnNcIiB0cmFjay1ieT1cIiRpbmRleFwiIGNsYXNzPVwiYWxlcnQgYWxlcnQtd2FybmluZyBhbGVydC1kaXNtaXNzaWJsZVwiIHJvbGU9XCJhbGVydFwiPlxuICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJjbG9zZVwiICBhcmlhLWxhYmVsPVwiQ2xvc2VcIiBAY2xpY2s9XCJlcnJvcnMgPSBbXVwiID48c3BhbiBhcmlhLWhpZGRlbj1cInRydWVcIj4mdGltZXM7PC9zcGFuPjwvYnV0dG9uPlxuICAgICAgICAgICAgPHN0cm9uZz5XYXRjaCBvdXQ8L3N0cm9uZz4ge3tlcnJvcn19XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8IS0tIElOUFVUUyAtLT5cbiAgICAgICAgICA8ZGl2IHYtaWY9XCJzaG93XCI+XG5cbiAgICAgICAgICAgIDwhLS0gX3RyYW5zbGF0aW9uc1tlbl9HQl1bdGl0bGVdIC0tPlxuICAgICAgICAgICAgPGRpdiB2LWlmPVwibGFuZ3VhZ2VzXCI+XG4gICAgICAgICAgICAgIDx1bCBjbGFzcz1cIm5hdiBuYXYtdGFic1wiIHJvbGU9XCJ0YWJsaXN0XCI+XG4gICAgICAgICAgICAgICAgPGxpIHYtZm9yPVwiKGxhbmd1YWdlLCBpbmRleCkgaW4gbGFuZ3VhZ2VzXCIgdi1iaW5kOmNsYXNzPVwieyAnYWN0aXZlJzogbGFuZ3VhZ2UgPT0gIGRlZmF1bHRMb2NhbGV9XCIgcm9sZT1cInByZXNlbnRhdGlvblwiPlxuICAgICAgICAgICAgICAgICAgPGEgOmhyZWY9XCInI2EtJytsYW5ndWFnZVwiIDphcmlhLWNvbnRyb2xzPVwiJ2EtJytsYW5ndWFnZVwiIHJvbGU9XCJ0YWJcIiBkYXRhLXRvZ2dsZT1cInRhYlwiID5cbiAgICAgICAgICAgICAgICAgICAge3tsYW5ndWFnZX19XG4gICAgICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRhYi1jb250ZW50XCI+XG5cbiAgICAgICAgICAgICAgICA8IS0tIG90aGVyIGxvY2FsZXMgLS0+XG4gICAgICAgICAgICAgICAgPGRpdiB2LWZvcj1cIihsYW5ndWFnZSwgaW5kZXgpIGluIGxhbmd1YWdlc1wiIHJvbGU9XCJ0YWJwYW5lbFwiIGNsYXNzPVwidGFiLXBhbmVcIiA6Y2xhc3M9XCJsYW5ndWFnZSA9PSBkZWZhdWx0TG9jYWxlPyAnYWN0aXZlJzogJydcIiA6aWQ9XCInYS0nK2xhbmd1YWdlXCI+XG5cbiAgICAgICAgICAgICAgICAgIDwhLS0gZmllbGRzIC0tPlxuICAgICAgICAgICAgICAgICAgPHBhZ2UtaW5wdXQgdi1mb3I9XCIoZmllbGQsIGluZGV4KSBpbiBmaWVsZHNcIiA6a2V5PVwiZmllbGQubmFtZVwiIDpuYW1lPVwiZmllbGQubmFtZVwiIDp0eXBlPVwiZmllbGQudHlwZVwiIDptb2RlbD1cImFydGljbGVcIiA6bGFuZ2F1Z2U9XCJsYW5ndWFnZVwiPjwvcGFnZS1pbnB1dD5cblxuICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDwhLS0gbm8gdHJhbnNsYXRlIC0tPlxuICAgICAgICAgICAgPGRpdiB2LWlmPVwiIWxhbmd1YWdlc1wiPlxuXG4gICAgICAgICAgICAgIDwhLS0gZmllbGRzIC0tPlxuICAgICAgICAgICAgICA8cGFnZS1pbnB1dCB2LWZvcj1cIihmaWVsZCwgaW5kZXgpIGluIGZpZWxkc1wiIDprZXk9XCJmaWVsZC5uYW1lXCIgOm5hbWU9XCJmaWVsZC5uYW1lXCIgOnR5cGU9XCJmaWVsZC50eXBlXCIgOm1vZGVsPVwiYXJ0aWNsZVwiIDpsYW5nYXVnZT1cIm51bGxcIj48L3BhZ2UtaW5wdXQ+XG5cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPC9kaXY+PCEtLSBFTkQgSU5QVVRTIC0tPlxuXG4gICAgICAgICAgPHA+PC9wPlxuXG4gICAgICAgICAgPCEtLSBGT09URVIgLS0+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImN1c3RvbS1tb2RhbC1mb290ZXJcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJidG4tZ3JvdXBcIj5cbiAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJtb2RhbC1kZWZhdWx0LWJ1dHRvbiBidG4gYnRuLXN1Y2Nlc3NcIiBAY2xpY2s9XCJzYXZlXCI+XG4gICAgICAgICAgICAgICAgU2F2ZVxuICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJtb2RhbC1kZWZhdWx0LWJ1dHRvbiBidG4gYnRuLXdhcm5pbmdcIiBAY2xpY2s9XCJjbG9zZVwiPlxuICAgICAgICAgICAgICAgIENsb3NlXG4gICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+PCEtLSBFTkQgRk9PVEVSIC0tPlxuXG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuPC90ZW1wbGF0ZT5cbjxzY3JpcHQ+XG5pbXBvcnQgeyBjbGllbnQgfSBmcm9tICdAL2h0dHAvY2xpZW50LmpzJ1xuXG5leHBvcnQgZGVmYXVsdFxue1xuICBuYW1lOiAncGFnZS1hcnRpY2xlcy1oYW5kbGVyJyxcbiAgcHJvcHM6IHtcbiAgICBsYW5ndWFnZXM6IEFycmF5LFxuICAgIGRlZmF1bHRMb2NhbGU6IFN0cmluZ1xuICB9LFxuICBkYXRhOiBmdW5jdGlvbigpe1xuICAgIHJldHVybiB7XG4gICAgICBiYXNlVXJsOiB0aGlzLiRyb290LiRlbC5kYXRhc2V0LndlYnJvb3QsXG4gICAgICBhcnRpY2xlOiB7fSxcbiAgICAgIGVycm9yczogW10sXG4gICAgICBzaG93OiBmYWxzZSxcbiAgICAgIG9wdGlvbnM6IHtoZWFkZXJzOntcIkFjY2VwdFwiOlwiYXBwbGljYXRpb24vanNvblwiLCBcIkNvbnRlbnQtVHlwZVwiOlwiYXBwbGljYXRpb24vanNvblwifX0sXG4gICAgICBmaWVsZHM6IFtcbiAgICAgICAge25hbWU6ICd0aXRsZScsIHR5cGU6ICd0ZXh0J30sXG4gICAgICAgIHtuYW1lOiAnaGVhZGVyJywgdHlwZTogJ3RleHQnfSxcbiAgICAgICAge25hbWU6ICdib2R5JywgdHlwZTogJ3RleHRhcmVhJ30sXG4gICAgICBdXG4gICAgfTtcbiAgfSxcbiAgY3JlYXRlZDogZnVuY3Rpb24oKXtcbiAgICB0aGlzLiRodWJPbigncGFnZScsJ2FydGljbGUtZWRpdCcsIHRoaXMuZWRpdCk7XG4gIH0sXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uKCl7fSxcbiAgbWV0aG9kczoge1xuICAgIGVkaXQ6IGZ1bmN0aW9uKGlkKXtcbiAgICAgIHRoaXMuYXJ0aWNsZS5pZCA9IGlkO1xuICAgICAgY2xpZW50LmdldCh0aGlzLmJhc2VVcmwrJ2FkbWluL3BhZ2VzL2FydGljbGVzL2VkaXQvJyt0aGlzLmFydGljbGUuaWQsIHRoaXMub3B0aW9ucylcbiAgICAgIC50aGVuKHRoaXMubG9hZEFydGljbGVTdWNjZXNzLCB0aGlzLmVycm9yKTtcbiAgICB9LFxuICAgIGFkZDogZnVuY3Rpb24oKXtcbiAgICAgIGFsZXJ0KCdhcnRpY2xlIGFkZCcpO1xuICAgIH0sXG4gICAgc2F2ZTogZnVuY3Rpb24oKXtcbiAgICAgIGFsZXJ0KCdzYXZlISEnKTtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9LFxuICAgIGxvYWRBcnRpY2xlU3VjY2VzczogZnVuY3Rpb24ocmVxdWVzdCl7XG4gICAgICB0aGlzLmFydGljbGUgPSByZXF1ZXN0LmJvZHkuYXJ0aWNsZTtcbiAgICAgIHRoaXMub3BlbigpO1xuICAgIH0sXG4gICAgZXJyb3I6IGZ1bmN0aW9uKHJlcXVlc3Qpe1xuICAgICAgYWxlcnQoJ2FuIGVycm9yIG9jY3VyZWQhJyk7XG4gICAgfSxcbiAgICBvcGVuOiBmdW5jdGlvbigpe1xuICAgICAgdGhpcy5zaG93ID0gdHJ1ZTtcbiAgICB9LFxuICAgIGNsb3NlOiBmdW5jdGlvbigpe1xuICAgICAgdGhpcy5zaG93ID0gZmFsc2U7XG4gICAgfSxcbiAgfVxufVxuPC9zY3JpcHQ+XG48c3R5bGUgbGFuZz1cInNjc3NcIiBzY29wZWQ+XG48L3N0eWxlPlxuIiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz8/Y2xvbmVkUnVsZVNldC0xWzBdLnJ1bGVzWzBdLnVzZSEuLi8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL1BhZ2VBcnRpY2xlc0hhbmRsZXIudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzPz9jbG9uZWRSdWxlU2V0LTFbMF0ucnVsZXNbMF0udXNlIS4uLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vUGFnZUFydGljbGVzSGFuZGxlci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL1BhZ2VBcnRpY2xlc0hhbmRsZXIudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTRhM2M4ZWQ5JnNjb3BlZD10cnVlJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL1BhZ2VBcnRpY2xlc0hhbmRsZXIudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5leHBvcnQgKiBmcm9tIFwiLi9QYWdlQXJ0aWNsZXNIYW5kbGVyLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIFwiNGEzYzhlZDlcIixcbiAgbnVsbFxuICBcbilcblxuLyogaG90IHJlbG9hZCAqL1xuaWYgKG1vZHVsZS5ob3QpIHtcbiAgdmFyIGFwaSA9IHJlcXVpcmUoXCIvVXNlcnMvYW50b2luZS9TaXRlcy9jYWtlcGhwLWFwcC9ub2RlX21vZHVsZXMvdnVlLWhvdC1yZWxvYWQtYXBpL2Rpc3QvaW5kZXguanNcIilcbiAgYXBpLmluc3RhbGwocmVxdWlyZSgndnVlJykpXG4gIGlmIChhcGkuY29tcGF0aWJsZSkge1xuICAgIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgICBpZiAoIWFwaS5pc1JlY29yZGVkKCc0YTNjOGVkOScpKSB7XG4gICAgICBhcGkuY3JlYXRlUmVjb3JkKCc0YTNjOGVkOScsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVsb2FkKCc0YTNjOGVkOScsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH1cbiAgICBtb2R1bGUuaG90LmFjY2VwdChcIi4vUGFnZUFydGljbGVzSGFuZGxlci52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NGEzYzhlZDkmc2NvcGVkPXRydWUmXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGFwaS5yZXJlbmRlcignNGEzYzhlZDknLCB7XG4gICAgICAgIHJlbmRlcjogcmVuZGVyLFxuICAgICAgICBzdGF0aWNSZW5kZXJGbnM6IHN0YXRpY1JlbmRlckZuc1xuICAgICAgfSlcbiAgICB9KVxuICB9XG59XG5jb21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcInZlbmRvci8zeHcvY2FrZXBocC1wYWdlcy9yZXNvdXJjZXMvYXNzZXRzL2NvbXBvbmVudHMvUGFnZUFydGljbGVzSGFuZGxlci52dWVcIlxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9